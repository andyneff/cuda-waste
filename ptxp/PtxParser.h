/** \file
 *  This C header file was generated by $ANTLR version 3.2 Sep 23, 2009 12:02:23
 *
 *     -  From the grammar source file : Ptx.g
 *     -                            On : 2013-05-26 12:28:44
 *     -                for the parser : PtxParserParser *
 * Editing it, at least manually, is not wise. 
 *
 * C language generator and runtime by Jim Idle, jimi|hereisanat|idle|dotgoeshere|ws.
 *
 *
 * The parser PtxParser has the callable functions (rules) shown below,
 * which will invoke the code for the associated rule in the source grammar
 * assuming that the input stream is pointing to a token/text stream that could begin
 * this rule.
 * 
 * For instance if you call the first (topmost) rule in a parser grammar, you will
 * get the results of a full parse, but calling a rule half way through the grammar will
 * allow you to pass part of a full token stream to the parser, such as for syntax checking
 * in editors and so on.
 *
 * The parser entry points are called indirectly (by function pointer to function) via
 * a parser context typedef pPtxParser, which is returned from a call to PtxParserNew().
 *
 * The methods in pPtxParser are  as follows:
 *
 *  - PtxParser_prog_return      pPtxParser->prog(pPtxParser)
 *  - PtxParser_version_return      pPtxParser->version(pPtxParser)
 *  - PtxParser_target_return      pPtxParser->target(pPtxParser)
 *  - PtxParser_target_list_return      pPtxParser->target_list(pPtxParser)
 *  - PtxParser_statement_return      pPtxParser->statement(pPtxParser)
 *  - PtxParser_label_decl_return      pPtxParser->label_decl(pPtxParser)
 *  - PtxParser_semicolon_terminated_statement_return      pPtxParser->semicolon_terminated_statement(pPtxParser)
 *  - PtxParser_unterminated_statement_return      pPtxParser->unterminated_statement(pPtxParser)
 *  - PtxParser_semicolon_terminated_directive_return      pPtxParser->semicolon_terminated_directive(pPtxParser)
 *  - PtxParser_unterminated_directive_return      pPtxParser->unterminated_directive(pPtxParser)
 *  - PtxParser_entry_return      pPtxParser->entry(pPtxParser)
 *  - PtxParser_entry_aux_return      pPtxParser->entry_aux(pPtxParser)
 *  - PtxParser_kernel_name_return      pPtxParser->kernel_name(pPtxParser)
 *  - PtxParser_entry_param_list_return      pPtxParser->entry_param_list(pPtxParser)
 *  - PtxParser_entry_param_return      pPtxParser->entry_param(pPtxParser)
 *  - PtxParser_entry_space_return      pPtxParser->entry_space(pPtxParser)
 *  - PtxParser_align_return      pPtxParser->align(pPtxParser)
 *  - PtxParser_byte_count_return      pPtxParser->byte_count(pPtxParser)
 *  - PtxParser_entry_param_type_return      pPtxParser->entry_param_type(pPtxParser)
 *  - PtxParser_entry_body_return      pPtxParser->entry_body(pPtxParser)
 *  - PtxParser_fundamental_type_return      pPtxParser->fundamental_type(pPtxParser)
 *  - PtxParser_fundamental_type_aux_return      pPtxParser->fundamental_type_aux(pPtxParser)
 *  - PtxParser_vector_type_return      pPtxParser->vector_type(pPtxParser)
 *  - PtxParser_vector_type_aux_return      pPtxParser->vector_type_aux(pPtxParser)
 *  - PtxParser_opaque_type_return      pPtxParser->opaque_type(pPtxParser)
 *  - PtxParser_opaque_type_aux_return      pPtxParser->opaque_type_aux(pPtxParser)
 *  - PtxParser_func_return      pPtxParser->func(pPtxParser)
 *  - PtxParser_func_aux_return      pPtxParser->func_aux(pPtxParser)
 *  - PtxParser_func_name_return      pPtxParser->func_name(pPtxParser)
 *  - PtxParser_func_ret_list_return      pPtxParser->func_ret_list(pPtxParser)
 *  - PtxParser_func_ret_return      pPtxParser->func_ret(pPtxParser)
 *  - PtxParser_func_ret_space_return      pPtxParser->func_ret_space(pPtxParser)
 *  - PtxParser_func_ret_type_return      pPtxParser->func_ret_type(pPtxParser)
 *  - PtxParser_func_param_list_return      pPtxParser->func_param_list(pPtxParser)
 *  - PtxParser_func_param_return      pPtxParser->func_param(pPtxParser)
 *  - PtxParser_func_param_space_return      pPtxParser->func_param_space(pPtxParser)
 *  - PtxParser_func_param_type_return      pPtxParser->func_param_type(pPtxParser)
 *  - PtxParser_func_body_return      pPtxParser->func_body(pPtxParser)
 *  - PtxParser_control_flow_directive_return      pPtxParser->control_flow_directive(pPtxParser)
 *  - PtxParser_branch_targets_return      pPtxParser->branch_targets(pPtxParser)
 *  - PtxParser_list_of_labels_return      pPtxParser->list_of_labels(pPtxParser)
 *  - PtxParser_call_targets_return      pPtxParser->call_targets(pPtxParser)
 *  - PtxParser_call_prototype_return      pPtxParser->call_prototype(pPtxParser)
 *  - PtxParser_call_param_list_return      pPtxParser->call_param_list(pPtxParser)
 *  - PtxParser_call_param_return      pPtxParser->call_param(pPtxParser)
 *  - PtxParser_call_param_space_return      pPtxParser->call_param_space(pPtxParser)
 *  - PtxParser_call_param_type_return      pPtxParser->call_param_type(pPtxParser)
 *  - PtxParser_performance_tuning_directives_return      pPtxParser->performance_tuning_directives(pPtxParser)
 *  - PtxParser_performance_tuning_directive_return      pPtxParser->performance_tuning_directive(pPtxParser)
 *  - PtxParser_maxnreg_return      pPtxParser->maxnreg(pPtxParser)
 *  - PtxParser_maxntid_return      pPtxParser->maxntid(pPtxParser)
 *  - PtxParser_reqntid_return      pPtxParser->reqntid(pPtxParser)
 *  - PtxParser_minnctapersm_return      pPtxParser->minnctapersm(pPtxParser)
 *  - PtxParser_maxnctapersm_return      pPtxParser->maxnctapersm(pPtxParser)
 *  - PtxParser_pragma_return      pPtxParser->pragma(pPtxParser)
 *  - PtxParser_list_of_strings_return      pPtxParser->list_of_strings(pPtxParser)
 *  - PtxParser_debugging_directive_return      pPtxParser->debugging_directive(pPtxParser)
 *  - PtxParser_dwarf_return      pPtxParser->dwarf(pPtxParser)
 *  - PtxParser_file_return      pPtxParser->file(pPtxParser)
 *  - PtxParser_section_return      pPtxParser->section(pPtxParser)
 *  - PtxParser_loc_return      pPtxParser->loc(pPtxParser)
 *  - PtxParser_linking_directive_return      pPtxParser->linking_directive(pPtxParser)
 *  - PtxParser_extern__return      pPtxParser->extern_(pPtxParser)
 *  - PtxParser_visible_return      pPtxParser->visible(pPtxParser)
 *  - PtxParser_identifier_decl_return      pPtxParser->identifier_decl(pPtxParser)
 *  - PtxParser_identifier_decl_aux_return      pPtxParser->identifier_decl_aux(pPtxParser)
 *  - PtxParser_variable_declarator_list_return      pPtxParser->variable_declarator_list(pPtxParser)
 *  - PtxParser_variable_declarator_list_with_initializer_return      pPtxParser->variable_declarator_list_with_initializer(pPtxParser)
 *  - PtxParser_variable_declarator_return      pPtxParser->variable_declarator(pPtxParser)
 *  - PtxParser_array_spec_return      pPtxParser->array_spec(pPtxParser)
 *  - PtxParser_array_spec_aux_return      pPtxParser->array_spec_aux(pPtxParser)
 *  - PtxParser_parameterized_register_spec_return      pPtxParser->parameterized_register_spec(pPtxParser)
 *  - PtxParser_id_or_opcode_return      pPtxParser->id_or_opcode(pPtxParser)
 *  - PtxParser_opcode_return      pPtxParser->opcode(pPtxParser)
 *  - PtxParser_variable_declarator_with_initializer_return      pPtxParser->variable_declarator_with_initializer(pPtxParser)
 *  - PtxParser_variable_equal_initializer_return      pPtxParser->variable_equal_initializer(pPtxParser)
 *  - PtxParser_variable_initializer_return      pPtxParser->variable_initializer(pPtxParser)
 *  - PtxParser_aggregate_initializer_return      pPtxParser->aggregate_initializer(pPtxParser)
 *  - PtxParser_type_return      pPtxParser->type(pPtxParser)
 *  - PtxParser_id_return      pPtxParser->id(pPtxParser)
 *  - PtxParser_state_space_specifier_return      pPtxParser->state_space_specifier(pPtxParser)
 *  - PtxParser_state_space_specifier_aux_return      pPtxParser->state_space_specifier_aux(pPtxParser)
 *  - PtxParser_global_space_specifier_return      pPtxParser->global_space_specifier(pPtxParser)
 *  - PtxParser_const_space_specifier_return      pPtxParser->const_space_specifier(pPtxParser)
 *  - PtxParser_const__return      pPtxParser->const_(pPtxParser)
 *  - PtxParser_global_return      pPtxParser->global(pPtxParser)
 *  - PtxParser_local_return      pPtxParser->local(pPtxParser)
 *  - PtxParser_param_return      pPtxParser->param(pPtxParser)
 *  - PtxParser_reg_return      pPtxParser->reg(pPtxParser)
 *  - PtxParser_shared_return      pPtxParser->shared(pPtxParser)
 *  - PtxParser_sreg_return      pPtxParser->sreg(pPtxParser)
 *  - PtxParser_tex_return      pPtxParser->tex(pPtxParser)
 *  - PtxParser_instruction_return      pPtxParser->instruction(pPtxParser)
 *  - PtxParser_instruction_aux_return      pPtxParser->instruction_aux(pPtxParser)
 *  - PtxParser_predicate_return      pPtxParser->predicate(pPtxParser)
 *  - PtxParser_i_abs_return      pPtxParser->i_abs(pPtxParser)
 *  - PtxParser_i_abs_type_return      pPtxParser->i_abs_type(pPtxParser)
 *  - PtxParser_i_abs_opr_return      pPtxParser->i_abs_opr(pPtxParser)
 *  - PtxParser_i_add_return      pPtxParser->i_add(pPtxParser)
 *  - PtxParser_i_add_type_return      pPtxParser->i_add_type(pPtxParser)
 *  - PtxParser_i_add_opr_return      pPtxParser->i_add_opr(pPtxParser)
 *  - PtxParser_i_addc_return      pPtxParser->i_addc(pPtxParser)
 *  - PtxParser_i_addc_type_return      pPtxParser->i_addc_type(pPtxParser)
 *  - PtxParser_i_addc_opr_return      pPtxParser->i_addc_opr(pPtxParser)
 *  - PtxParser_i_and_return      pPtxParser->i_and(pPtxParser)
 *  - PtxParser_i_and_type_return      pPtxParser->i_and_type(pPtxParser)
 *  - PtxParser_i_and_opr_return      pPtxParser->i_and_opr(pPtxParser)
 *  - PtxParser_i_atom_return      pPtxParser->i_atom(pPtxParser)
 *  - PtxParser_i_atom_type_return      pPtxParser->i_atom_type(pPtxParser)
 *  - PtxParser_i_atom_opr_return      pPtxParser->i_atom_opr(pPtxParser)
 *  - PtxParser_i_bar_return      pPtxParser->i_bar(pPtxParser)
 *  - PtxParser_i_bar1_return      pPtxParser->i_bar1(pPtxParser)
 *  - PtxParser_i_bar1_type_return      pPtxParser->i_bar1_type(pPtxParser)
 *  - PtxParser_i_bar1_opr_return      pPtxParser->i_bar1_opr(pPtxParser)
 *  - PtxParser_i_bar2_return      pPtxParser->i_bar2(pPtxParser)
 *  - PtxParser_i_bar2_type_return      pPtxParser->i_bar2_type(pPtxParser)
 *  - PtxParser_i_bar2_opr_return      pPtxParser->i_bar2_opr(pPtxParser)
 *  - PtxParser_i_bar3_return      pPtxParser->i_bar3(pPtxParser)
 *  - PtxParser_i_bar3_type_return      pPtxParser->i_bar3_type(pPtxParser)
 *  - PtxParser_i_bar3_opr_return      pPtxParser->i_bar3_opr(pPtxParser)
 *  - PtxParser_i_bar4_return      pPtxParser->i_bar4(pPtxParser)
 *  - PtxParser_i_bar4_type_return      pPtxParser->i_bar4_type(pPtxParser)
 *  - PtxParser_i_bar4_opr_return      pPtxParser->i_bar4_opr(pPtxParser)
 *  - PtxParser_i_bfe_return      pPtxParser->i_bfe(pPtxParser)
 *  - PtxParser_i_bfe_type_return      pPtxParser->i_bfe_type(pPtxParser)
 *  - PtxParser_i_bfe_opr_return      pPtxParser->i_bfe_opr(pPtxParser)
 *  - PtxParser_i_bfi_return      pPtxParser->i_bfi(pPtxParser)
 *  - PtxParser_i_bfi_type_return      pPtxParser->i_bfi_type(pPtxParser)
 *  - PtxParser_i_bfi_opr_return      pPtxParser->i_bfi_opr(pPtxParser)
 *  - PtxParser_i_bfind_return      pPtxParser->i_bfind(pPtxParser)
 *  - PtxParser_i_bfind_type_return      pPtxParser->i_bfind_type(pPtxParser)
 *  - PtxParser_i_bfind_opr_return      pPtxParser->i_bfind_opr(pPtxParser)
 *  - PtxParser_i_bra_return      pPtxParser->i_bra(pPtxParser)
 *  - PtxParser_i_bra_type_return      pPtxParser->i_bra_type(pPtxParser)
 *  - PtxParser_i_bra_opr_return      pPtxParser->i_bra_opr(pPtxParser)
 *  - PtxParser_i_brev_return      pPtxParser->i_brev(pPtxParser)
 *  - PtxParser_i_brev_type_return      pPtxParser->i_brev_type(pPtxParser)
 *  - PtxParser_i_brev_opr_return      pPtxParser->i_brev_opr(pPtxParser)
 *  - PtxParser_i_brkpt_return      pPtxParser->i_brkpt(pPtxParser)
 *  - PtxParser_i_call_return      pPtxParser->i_call(pPtxParser)
 *  - PtxParser_i_call_type_return      pPtxParser->i_call_type(pPtxParser)
 *  - PtxParser_flist_return      pPtxParser->flist(pPtxParser)
 *  - PtxParser_fproto_return      pPtxParser->fproto(pPtxParser)
 *  - PtxParser_i_clz_return      pPtxParser->i_clz(pPtxParser)
 *  - PtxParser_i_clz_type_return      pPtxParser->i_clz_type(pPtxParser)
 *  - PtxParser_i_clz_opr_return      pPtxParser->i_clz_opr(pPtxParser)
 *  - PtxParser_i_cnot_return      pPtxParser->i_cnot(pPtxParser)
 *  - PtxParser_i_cnot_type_return      pPtxParser->i_cnot_type(pPtxParser)
 *  - PtxParser_i_cnot_opr_return      pPtxParser->i_cnot_opr(pPtxParser)
 *  - PtxParser_i_copysign_return      pPtxParser->i_copysign(pPtxParser)
 *  - PtxParser_i_copysign_type_return      pPtxParser->i_copysign_type(pPtxParser)
 *  - PtxParser_i_copysign_opr_return      pPtxParser->i_copysign_opr(pPtxParser)
 *  - PtxParser_i_cos_return      pPtxParser->i_cos(pPtxParser)
 *  - PtxParser_i_cos_type_return      pPtxParser->i_cos_type(pPtxParser)
 *  - PtxParser_i_cos_opr_return      pPtxParser->i_cos_opr(pPtxParser)
 *  - PtxParser_i_cvt_return      pPtxParser->i_cvt(pPtxParser)
 *  - PtxParser_i_cvt_type_return      pPtxParser->i_cvt_type(pPtxParser)
 *  - PtxParser_i_cvt_irnd_return      pPtxParser->i_cvt_irnd(pPtxParser)
 *  - PtxParser_i_cvt_irnd_aux_return      pPtxParser->i_cvt_irnd_aux(pPtxParser)
 *  - PtxParser_i_cvt_frnd_return      pPtxParser->i_cvt_frnd(pPtxParser)
 *  - PtxParser_i_cvt_frnd_aux_return      pPtxParser->i_cvt_frnd_aux(pPtxParser)
 *  - PtxParser_i_cvt_opr_return      pPtxParser->i_cvt_opr(pPtxParser)
 *  - PtxParser_i_cvta_return      pPtxParser->i_cvta(pPtxParser)
 *  - PtxParser_i_cvta_type_return      pPtxParser->i_cvta_type(pPtxParser)
 *  - PtxParser_i_cvta_opr_return      pPtxParser->i_cvta_opr(pPtxParser)
 *  - PtxParser_i_div_return      pPtxParser->i_div(pPtxParser)
 *  - PtxParser_i_div_type_return      pPtxParser->i_div_type(pPtxParser)
 *  - PtxParser_i_div_opr_return      pPtxParser->i_div_opr(pPtxParser)
 *  - PtxParser_i_ex2_return      pPtxParser->i_ex2(pPtxParser)
 *  - PtxParser_i_ex2_type_return      pPtxParser->i_ex2_type(pPtxParser)
 *  - PtxParser_i_ex2_opr_return      pPtxParser->i_ex2_opr(pPtxParser)
 *  - PtxParser_i_exit_return      pPtxParser->i_exit(pPtxParser)
 *  - PtxParser_i_fma_return      pPtxParser->i_fma(pPtxParser)
 *  - PtxParser_i_fma_type_return      pPtxParser->i_fma_type(pPtxParser)
 *  - PtxParser_i_fma_opr_return      pPtxParser->i_fma_opr(pPtxParser)
 *  - PtxParser_i_isspacep_return      pPtxParser->i_isspacep(pPtxParser)
 *  - PtxParser_i_isspacep_type_return      pPtxParser->i_isspacep_type(pPtxParser)
 *  - PtxParser_i_isspacep_opr_return      pPtxParser->i_isspacep_opr(pPtxParser)
 *  - PtxParser_i_ld_return      pPtxParser->i_ld(pPtxParser)
 *  - PtxParser_i_ld_type_return      pPtxParser->i_ld_type(pPtxParser)
 *  - PtxParser_i_ld_opr_return      pPtxParser->i_ld_opr(pPtxParser)
 *  - PtxParser_i_ldu_return      pPtxParser->i_ldu(pPtxParser)
 *  - PtxParser_i_ldu_type_return      pPtxParser->i_ldu_type(pPtxParser)
 *  - PtxParser_i_ldu_opr_return      pPtxParser->i_ldu_opr(pPtxParser)
 *  - PtxParser_i_lg2_return      pPtxParser->i_lg2(pPtxParser)
 *  - PtxParser_i_lg2_type_return      pPtxParser->i_lg2_type(pPtxParser)
 *  - PtxParser_i_lg2_opr_return      pPtxParser->i_lg2_opr(pPtxParser)
 *  - PtxParser_i_mad_return      pPtxParser->i_mad(pPtxParser)
 *  - PtxParser_i_mad_type_return      pPtxParser->i_mad_type(pPtxParser)
 *  - PtxParser_i_mad_opr_return      pPtxParser->i_mad_opr(pPtxParser)
 *  - PtxParser_i_mad24_return      pPtxParser->i_mad24(pPtxParser)
 *  - PtxParser_i_mad24_type_return      pPtxParser->i_mad24_type(pPtxParser)
 *  - PtxParser_i_mad24_opr_return      pPtxParser->i_mad24_opr(pPtxParser)
 *  - PtxParser_i_max_return      pPtxParser->i_max(pPtxParser)
 *  - PtxParser_i_max_type_return      pPtxParser->i_max_type(pPtxParser)
 *  - PtxParser_i_max_opr_return      pPtxParser->i_max_opr(pPtxParser)
 *  - PtxParser_i_membar_return      pPtxParser->i_membar(pPtxParser)
 *  - PtxParser_i_membar_type_return      pPtxParser->i_membar_type(pPtxParser)
 *  - PtxParser_i_min_return      pPtxParser->i_min(pPtxParser)
 *  - PtxParser_i_min_type_return      pPtxParser->i_min_type(pPtxParser)
 *  - PtxParser_i_min_opr_return      pPtxParser->i_min_opr(pPtxParser)
 *  - PtxParser_i_mov_return      pPtxParser->i_mov(pPtxParser)
 *  - PtxParser_i_mov_type_return      pPtxParser->i_mov_type(pPtxParser)
 *  - PtxParser_i_mov_opr_return      pPtxParser->i_mov_opr(pPtxParser)
 *  - PtxParser_i_mul_return      pPtxParser->i_mul(pPtxParser)
 *  - PtxParser_i_mul_type_return      pPtxParser->i_mul_type(pPtxParser)
 *  - PtxParser_i_mul_opr_return      pPtxParser->i_mul_opr(pPtxParser)
 *  - PtxParser_i_mul24_return      pPtxParser->i_mul24(pPtxParser)
 *  - PtxParser_i_mul24_type_return      pPtxParser->i_mul24_type(pPtxParser)
 *  - PtxParser_i_mul24_opr_return      pPtxParser->i_mul24_opr(pPtxParser)
 *  - PtxParser_i_neg_return      pPtxParser->i_neg(pPtxParser)
 *  - PtxParser_i_neg_type_return      pPtxParser->i_neg_type(pPtxParser)
 *  - PtxParser_i_neg_opr_return      pPtxParser->i_neg_opr(pPtxParser)
 *  - PtxParser_i_not_return      pPtxParser->i_not(pPtxParser)
 *  - PtxParser_i_not_type_return      pPtxParser->i_not_type(pPtxParser)
 *  - PtxParser_i_not_opr_return      pPtxParser->i_not_opr(pPtxParser)
 *  - PtxParser_i_or_return      pPtxParser->i_or(pPtxParser)
 *  - PtxParser_i_or_type_return      pPtxParser->i_or_type(pPtxParser)
 *  - PtxParser_i_or_opr_return      pPtxParser->i_or_opr(pPtxParser)
 *  - PtxParser_i_pmevent_return      pPtxParser->i_pmevent(pPtxParser)
 *  - PtxParser_i_pmevent_opr_return      pPtxParser->i_pmevent_opr(pPtxParser)
 *  - PtxParser_i_popc_return      pPtxParser->i_popc(pPtxParser)
 *  - PtxParser_i_popc_type_return      pPtxParser->i_popc_type(pPtxParser)
 *  - PtxParser_i_popc_opr_return      pPtxParser->i_popc_opr(pPtxParser)
 *  - PtxParser_i_prefetch_return      pPtxParser->i_prefetch(pPtxParser)
 *  - PtxParser_i_prefetch_type_return      pPtxParser->i_prefetch_type(pPtxParser)
 *  - PtxParser_i_prefetch_opr_return      pPtxParser->i_prefetch_opr(pPtxParser)
 *  - PtxParser_i_prefetchu_return      pPtxParser->i_prefetchu(pPtxParser)
 *  - PtxParser_i_prefetchu_type_return      pPtxParser->i_prefetchu_type(pPtxParser)
 *  - PtxParser_i_prefetchu_opr_return      pPtxParser->i_prefetchu_opr(pPtxParser)
 *  - PtxParser_i_prmt_return      pPtxParser->i_prmt(pPtxParser)
 *  - PtxParser_i_prmt_type_return      pPtxParser->i_prmt_type(pPtxParser)
 *  - PtxParser_i_prmt_opr_return      pPtxParser->i_prmt_opr(pPtxParser)
 *  - PtxParser_i_rcp_return      pPtxParser->i_rcp(pPtxParser)
 *  - PtxParser_i_rcp_type_return      pPtxParser->i_rcp_type(pPtxParser)
 *  - PtxParser_i_rcp_opr_return      pPtxParser->i_rcp_opr(pPtxParser)
 *  - PtxParser_i_red_return      pPtxParser->i_red(pPtxParser)
 *  - PtxParser_i_red_type_return      pPtxParser->i_red_type(pPtxParser)
 *  - PtxParser_i_red_opr_return      pPtxParser->i_red_opr(pPtxParser)
 *  - PtxParser_i_rem_return      pPtxParser->i_rem(pPtxParser)
 *  - PtxParser_i_rem_type_return      pPtxParser->i_rem_type(pPtxParser)
 *  - PtxParser_i_rem_opr_return      pPtxParser->i_rem_opr(pPtxParser)
 *  - PtxParser_i_ret_return      pPtxParser->i_ret(pPtxParser)
 *  - PtxParser_i_ret_type_return      pPtxParser->i_ret_type(pPtxParser)
 *  - PtxParser_i_rsqrt_return      pPtxParser->i_rsqrt(pPtxParser)
 *  - PtxParser_i_rsqrt_type_return      pPtxParser->i_rsqrt_type(pPtxParser)
 *  - PtxParser_i_rsqrt_opr_return      pPtxParser->i_rsqrt_opr(pPtxParser)
 *  - PtxParser_i_sad_return      pPtxParser->i_sad(pPtxParser)
 *  - PtxParser_i_sad_type_return      pPtxParser->i_sad_type(pPtxParser)
 *  - PtxParser_i_sad_opr_return      pPtxParser->i_sad_opr(pPtxParser)
 *  - PtxParser_i_selp_return      pPtxParser->i_selp(pPtxParser)
 *  - PtxParser_i_selp_type_return      pPtxParser->i_selp_type(pPtxParser)
 *  - PtxParser_i_selp_opr_return      pPtxParser->i_selp_opr(pPtxParser)
 *  - PtxParser_i_set_return      pPtxParser->i_set(pPtxParser)
 *  - PtxParser_i_set1_return      pPtxParser->i_set1(pPtxParser)
 *  - PtxParser_i_set1_type_return      pPtxParser->i_set1_type(pPtxParser)
 *  - PtxParser_i_set1_opr_return      pPtxParser->i_set1_opr(pPtxParser)
 *  - PtxParser_i_set2_return      pPtxParser->i_set2(pPtxParser)
 *  - PtxParser_i_set2_type_return      pPtxParser->i_set2_type(pPtxParser)
 *  - PtxParser_i_set2_opr_return      pPtxParser->i_set2_opr(pPtxParser)
 *  - PtxParser_i_setp_return      pPtxParser->i_setp(pPtxParser)
 *  - PtxParser_i_setp1_return      pPtxParser->i_setp1(pPtxParser)
 *  - PtxParser_i_setp1_type_return      pPtxParser->i_setp1_type(pPtxParser)
 *  - PtxParser_i_setp1_opr_return      pPtxParser->i_setp1_opr(pPtxParser)
 *  - PtxParser_i_setp2_return      pPtxParser->i_setp2(pPtxParser)
 *  - PtxParser_i_setp2_type_return      pPtxParser->i_setp2_type(pPtxParser)
 *  - PtxParser_i_setp2_opr_return      pPtxParser->i_setp2_opr(pPtxParser)
 *  - PtxParser_i_shl_return      pPtxParser->i_shl(pPtxParser)
 *  - PtxParser_i_shl_type_return      pPtxParser->i_shl_type(pPtxParser)
 *  - PtxParser_i_shl_opr_return      pPtxParser->i_shl_opr(pPtxParser)
 *  - PtxParser_i_shr_return      pPtxParser->i_shr(pPtxParser)
 *  - PtxParser_i_shr_type_return      pPtxParser->i_shr_type(pPtxParser)
 *  - PtxParser_i_shr_opr_return      pPtxParser->i_shr_opr(pPtxParser)
 *  - PtxParser_i_sin_return      pPtxParser->i_sin(pPtxParser)
 *  - PtxParser_i_sin_type_return      pPtxParser->i_sin_type(pPtxParser)
 *  - PtxParser_i_sin_opr_return      pPtxParser->i_sin_opr(pPtxParser)
 *  - PtxParser_i_slct_return      pPtxParser->i_slct(pPtxParser)
 *  - PtxParser_i_slct_type_return      pPtxParser->i_slct_type(pPtxParser)
 *  - PtxParser_i_slct_opr_return      pPtxParser->i_slct_opr(pPtxParser)
 *  - PtxParser_i_sqrt_return      pPtxParser->i_sqrt(pPtxParser)
 *  - PtxParser_i_sqrt_type_return      pPtxParser->i_sqrt_type(pPtxParser)
 *  - PtxParser_i_sqrt_opr_return      pPtxParser->i_sqrt_opr(pPtxParser)
 *  - PtxParser_i_st_return      pPtxParser->i_st(pPtxParser)
 *  - PtxParser_i_st_type_return      pPtxParser->i_st_type(pPtxParser)
 *  - PtxParser_i_st_opr_return      pPtxParser->i_st_opr(pPtxParser)
 *  - PtxParser_i_sub_return      pPtxParser->i_sub(pPtxParser)
 *  - PtxParser_i_sub_type_return      pPtxParser->i_sub_type(pPtxParser)
 *  - PtxParser_i_sub_opr_return      pPtxParser->i_sub_opr(pPtxParser)
 *  - PtxParser_i_subc_return      pPtxParser->i_subc(pPtxParser)
 *  - PtxParser_i_subc_type_return      pPtxParser->i_subc_type(pPtxParser)
 *  - PtxParser_i_subc_opr_return      pPtxParser->i_subc_opr(pPtxParser)
 *  - PtxParser_i_suld_return      pPtxParser->i_suld(pPtxParser)
 *  - PtxParser_i_suld_type_return      pPtxParser->i_suld_type(pPtxParser)
 *  - PtxParser_i_suld_opr_return      pPtxParser->i_suld_opr(pPtxParser)
 *  - PtxParser_i_sured_return      pPtxParser->i_sured(pPtxParser)
 *  - PtxParser_i_sured_type_return      pPtxParser->i_sured_type(pPtxParser)
 *  - PtxParser_i_sured_opr_return      pPtxParser->i_sured_opr(pPtxParser)
 *  - PtxParser_i_sust_return      pPtxParser->i_sust(pPtxParser)
 *  - PtxParser_i_sust_type_return      pPtxParser->i_sust_type(pPtxParser)
 *  - PtxParser_i_sust_opr_return      pPtxParser->i_sust_opr(pPtxParser)
 *  - PtxParser_i_suq_return      pPtxParser->i_suq(pPtxParser)
 *  - PtxParser_i_suq_type_return      pPtxParser->i_suq_type(pPtxParser)
 *  - PtxParser_i_suq_opr_return      pPtxParser->i_suq_opr(pPtxParser)
 *  - PtxParser_i_testp_return      pPtxParser->i_testp(pPtxParser)
 *  - PtxParser_i_testp_type_return      pPtxParser->i_testp_type(pPtxParser)
 *  - PtxParser_i_testp_opr_return      pPtxParser->i_testp_opr(pPtxParser)
 *  - PtxParser_i_tex_return      pPtxParser->i_tex(pPtxParser)
 *  - PtxParser_i_tex_type_return      pPtxParser->i_tex_type(pPtxParser)
 *  - PtxParser_i_tex_opr_return      pPtxParser->i_tex_opr(pPtxParser)
 *  - PtxParser_i_txq_return      pPtxParser->i_txq(pPtxParser)
 *  - PtxParser_i_txq_type_return      pPtxParser->i_txq_type(pPtxParser)
 *  - PtxParser_i_txq_opr_return      pPtxParser->i_txq_opr(pPtxParser)
 *  - PtxParser_i_trap_return      pPtxParser->i_trap(pPtxParser)
 *  - PtxParser_i_vabsdiff_return      pPtxParser->i_vabsdiff(pPtxParser)
 *  - PtxParser_i_vadd_return      pPtxParser->i_vadd(pPtxParser)
 *  - PtxParser_i_vmad_return      pPtxParser->i_vmad(pPtxParser)
 *  - PtxParser_i_vmax_return      pPtxParser->i_vmax(pPtxParser)
 *  - PtxParser_i_vmin_return      pPtxParser->i_vmin(pPtxParser)
 *  - PtxParser_i_vset_return      pPtxParser->i_vset(pPtxParser)
 *  - PtxParser_i_vshl_return      pPtxParser->i_vshl(pPtxParser)
 *  - PtxParser_i_vshr_return      pPtxParser->i_vshr(pPtxParser)
 *  - PtxParser_i_vsub_return      pPtxParser->i_vsub(pPtxParser)
 *  - PtxParser_i_vote_return      pPtxParser->i_vote(pPtxParser)
 *  - PtxParser_i_vote_type_return      pPtxParser->i_vote_type(pPtxParser)
 *  - PtxParser_i_vote_opr_return      pPtxParser->i_vote_opr(pPtxParser)
 *  - PtxParser_i_xor_return      pPtxParser->i_xor(pPtxParser)
 *  - PtxParser_i_xor_type_return      pPtxParser->i_xor_type(pPtxParser)
 *  - PtxParser_i_xor_opr_return      pPtxParser->i_xor_opr(pPtxParser)
 *  - PtxParser_opr_register_return      pPtxParser->opr_register(pPtxParser)
 *  - PtxParser_opr_register_or_constant_return      pPtxParser->opr_register_or_constant(pPtxParser)
 *  - PtxParser_opr_register_or_constant2_return      pPtxParser->opr_register_or_constant2(pPtxParser)
 *  - PtxParser_opr_register_or_constant3_return      pPtxParser->opr_register_or_constant3(pPtxParser)
 *  - PtxParser_opr_register_or_constant4_return      pPtxParser->opr_register_or_constant4(pPtxParser)
 *  - PtxParser_opr_register_or_constant5_return      pPtxParser->opr_register_or_constant5(pPtxParser)
 *  - PtxParser_opr_label_return      pPtxParser->opr_label(pPtxParser)
 *  - PtxParser_opr_return      pPtxParser->opr(pPtxParser)
 *  - PtxParser_opr_aux_return      pPtxParser->opr_aux(pPtxParser)
 *  - PtxParser_opr2_return      pPtxParser->opr2(pPtxParser)
 *  - PtxParser_opr3_return      pPtxParser->opr3(pPtxParser)
 *  - PtxParser_opr4_return      pPtxParser->opr4(pPtxParser)
 *  - PtxParser_opr5_return      pPtxParser->opr5(pPtxParser)
 *  - PtxParser_constant_expression_return      pPtxParser->constant_expression(pPtxParser)
 *  - PtxParser_constant_expression_aux_return      pPtxParser->constant_expression_aux(pPtxParser)
 *  - PtxParser_conditional_expression_return      pPtxParser->conditional_expression(pPtxParser)
 *  - PtxParser_conditional_or_expression_return      pPtxParser->conditional_or_expression(pPtxParser)
 *  - PtxParser_conditional_and_expression_return      pPtxParser->conditional_and_expression(pPtxParser)
 *  - PtxParser_inclusive_or_expression_return      pPtxParser->inclusive_or_expression(pPtxParser)
 *  - PtxParser_exclusive_or_expression_return      pPtxParser->exclusive_or_expression(pPtxParser)
 *  - PtxParser_and_expression_return      pPtxParser->and_expression(pPtxParser)
 *  - PtxParser_equality_expression_return      pPtxParser->equality_expression(pPtxParser)
 *  - PtxParser_relational_expression_return      pPtxParser->relational_expression(pPtxParser)
 *  - PtxParser_relational_op_return      pPtxParser->relational_op(pPtxParser)
 *  - PtxParser_shift_expression_return      pPtxParser->shift_expression(pPtxParser)
 *  - PtxParser_shift_op_return      pPtxParser->shift_op(pPtxParser)
 *  - PtxParser_additive_expression_return      pPtxParser->additive_expression(pPtxParser)
 *  - PtxParser_multiplicative_expression_return      pPtxParser->multiplicative_expression(pPtxParser)
 *  - PtxParser_unary_expression_return      pPtxParser->unary_expression(pPtxParser)
 *  - PtxParser_unary_expression_not_plus_minus_return      pPtxParser->unary_expression_not_plus_minus(pPtxParser)
 *  - PtxParser_cast_expression_return      pPtxParser->cast_expression(pPtxParser)
 *  - PtxParser_cast_expression_aux_return      pPtxParser->cast_expression_aux(pPtxParser)
 *  - PtxParser_primary_return      pPtxParser->primary(pPtxParser)
 *  - PtxParser_par_expression_return      pPtxParser->par_expression(pPtxParser)
 *  - PtxParser_integer_return      pPtxParser->integer(pPtxParser)
 *  - PtxParser_float__return      pPtxParser->float_(pPtxParser)
 *  - PtxParser_base_10_integer_return      pPtxParser->base_10_integer(pPtxParser)
 *  - PtxParser_base_8_integer_return      pPtxParser->base_8_integer(pPtxParser)
 *  - PtxParser_base_16_integer_return      pPtxParser->base_16_integer(pPtxParser)
 *
 * The return type for any particular rule is of course determined by the source
 * grammar file.
 */
// [The "BSD licence"]
// Copyright (c) 2005-2009 Jim Idle, Temporal Wave LLC
// http://www.temporal-wave.com
// http://www.linkedin.com/in/jimidle
//
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. The name of the author may not be used to endorse or promote products
//    derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#ifndef	_PtxParser_H
#define _PtxParser_H
/* =============================================================================
 * Standard antlr3 C runtime definitions
 */
#include    <antlr3.h>

/* End of standard antlr 3 runtime definitions
 * =============================================================================
 */
 
#ifdef __cplusplus
extern "C" {
#endif

// Forward declare the context typedef so that we can use it before it is
// properly defined. Delegators and delegates (from import statements) are
// interdependent and their context structures contain pointers to each other
// C only allows such things to be declared if you pre-declare the typedef.
//
typedef struct PtxParser_Ctx_struct PtxParser, * pPtxParser;



#ifdef	ANTLR3_WINDOWS
// Disable: Unreferenced parameter,							- Rules with parameters that are not used
//          constant conditional,							- ANTLR realizes that a prediction is always true (synpred usually)
//          initialized but unused variable					- tree rewrite variables declared but not needed
//          Unreferenced local variable						- lexer rule declares but does not always use _type
//          potentially unitialized variable used			- retval always returned from a rule 
//			unreferenced local function has been removed	- susually getTokenNames or freeScope, they can go without warnigns
//
// These are only really displayed at warning level /W4 but that is the code ideal I am aiming at
// and the codegen must generate some of these warnings by necessity, apart from 4100, which is
// usually generated when a parser rule is given a parameter that it does not use. Mostly though
// this is a matter of orthogonality hence I disable that one.
//
#pragma warning( disable : 4100 )
#pragma warning( disable : 4101 )
#pragma warning( disable : 4127 )
#pragma warning( disable : 4189 )
#pragma warning( disable : 4505 )
#pragma warning( disable : 4701 )
#endif

/* ========================
 * BACKTRACKING IS ENABLED
 * ========================
 */
typedef struct PtxParser_prog_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_prog_return;

typedef struct PtxParser_version_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_version_return;

typedef struct PtxParser_target_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_target_return;

typedef struct PtxParser_target_list_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_target_list_return;

typedef struct PtxParser_statement_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_statement_return;

typedef struct PtxParser_label_decl_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_label_decl_return;

typedef struct PtxParser_semicolon_terminated_statement_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_semicolon_terminated_statement_return;

typedef struct PtxParser_unterminated_statement_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_unterminated_statement_return;

typedef struct PtxParser_semicolon_terminated_directive_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_semicolon_terminated_directive_return;

typedef struct PtxParser_unterminated_directive_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_unterminated_directive_return;

typedef struct PtxParser_entry_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_entry_return;

typedef struct PtxParser_entry_aux_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_entry_aux_return;

typedef struct PtxParser_kernel_name_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_kernel_name_return;

typedef struct PtxParser_entry_param_list_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_entry_param_list_return;

typedef struct PtxParser_entry_param_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_entry_param_return;

typedef struct PtxParser_entry_space_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_entry_space_return;

typedef struct PtxParser_align_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_align_return;

typedef struct PtxParser_byte_count_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_byte_count_return;

typedef struct PtxParser_entry_param_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_entry_param_type_return;

typedef struct PtxParser_entry_body_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_entry_body_return;

typedef struct PtxParser_fundamental_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_fundamental_type_return;

typedef struct PtxParser_fundamental_type_aux_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_fundamental_type_aux_return;

typedef struct PtxParser_vector_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_vector_type_return;

typedef struct PtxParser_vector_type_aux_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_vector_type_aux_return;

typedef struct PtxParser_opaque_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_opaque_type_return;

typedef struct PtxParser_opaque_type_aux_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_opaque_type_aux_return;

typedef struct PtxParser_func_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_func_return;

typedef struct PtxParser_func_aux_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_func_aux_return;

typedef struct PtxParser_func_name_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_func_name_return;

typedef struct PtxParser_func_ret_list_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_func_ret_list_return;

typedef struct PtxParser_func_ret_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_func_ret_return;

typedef struct PtxParser_func_ret_space_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_func_ret_space_return;

typedef struct PtxParser_func_ret_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_func_ret_type_return;

typedef struct PtxParser_func_param_list_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_func_param_list_return;

typedef struct PtxParser_func_param_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_func_param_return;

typedef struct PtxParser_func_param_space_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_func_param_space_return;

typedef struct PtxParser_func_param_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_func_param_type_return;

typedef struct PtxParser_func_body_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_func_body_return;

typedef struct PtxParser_control_flow_directive_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_control_flow_directive_return;

typedef struct PtxParser_branch_targets_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_branch_targets_return;

typedef struct PtxParser_list_of_labels_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_list_of_labels_return;

typedef struct PtxParser_call_targets_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_call_targets_return;

typedef struct PtxParser_call_prototype_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_call_prototype_return;

typedef struct PtxParser_call_param_list_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_call_param_list_return;

typedef struct PtxParser_call_param_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_call_param_return;

typedef struct PtxParser_call_param_space_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_call_param_space_return;

typedef struct PtxParser_call_param_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_call_param_type_return;

typedef struct PtxParser_performance_tuning_directives_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_performance_tuning_directives_return;

typedef struct PtxParser_performance_tuning_directive_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_performance_tuning_directive_return;

typedef struct PtxParser_maxnreg_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_maxnreg_return;

typedef struct PtxParser_maxntid_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_maxntid_return;

typedef struct PtxParser_reqntid_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_reqntid_return;

typedef struct PtxParser_minnctapersm_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_minnctapersm_return;

typedef struct PtxParser_maxnctapersm_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_maxnctapersm_return;

typedef struct PtxParser_pragma_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_pragma_return;

typedef struct PtxParser_list_of_strings_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_list_of_strings_return;

typedef struct PtxParser_debugging_directive_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_debugging_directive_return;

typedef struct PtxParser_dwarf_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_dwarf_return;

typedef struct PtxParser_file_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_file_return;

typedef struct PtxParser_section_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_section_return;

typedef struct PtxParser_loc_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_loc_return;

typedef struct PtxParser_linking_directive_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_linking_directive_return;

typedef struct PtxParser_extern__return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_extern__return;

typedef struct PtxParser_visible_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_visible_return;

typedef struct PtxParser_identifier_decl_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_identifier_decl_return;

typedef struct PtxParser_identifier_decl_aux_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_identifier_decl_aux_return;

typedef struct PtxParser_variable_declarator_list_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_variable_declarator_list_return;

typedef struct PtxParser_variable_declarator_list_with_initializer_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_variable_declarator_list_with_initializer_return;

typedef struct PtxParser_variable_declarator_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_variable_declarator_return;

typedef struct PtxParser_array_spec_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_array_spec_return;

typedef struct PtxParser_array_spec_aux_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_array_spec_aux_return;

typedef struct PtxParser_parameterized_register_spec_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_parameterized_register_spec_return;

typedef struct PtxParser_id_or_opcode_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_id_or_opcode_return;

typedef struct PtxParser_opcode_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_opcode_return;

typedef struct PtxParser_variable_declarator_with_initializer_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_variable_declarator_with_initializer_return;

typedef struct PtxParser_variable_equal_initializer_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_variable_equal_initializer_return;

typedef struct PtxParser_variable_initializer_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_variable_initializer_return;

typedef struct PtxParser_aggregate_initializer_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_aggregate_initializer_return;

typedef struct PtxParser_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_type_return;

typedef struct PtxParser_id_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_id_return;

typedef struct PtxParser_state_space_specifier_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_state_space_specifier_return;

typedef struct PtxParser_state_space_specifier_aux_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_state_space_specifier_aux_return;

typedef struct PtxParser_global_space_specifier_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_global_space_specifier_return;

typedef struct PtxParser_const_space_specifier_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_const_space_specifier_return;

typedef struct PtxParser_const__return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_const__return;

typedef struct PtxParser_global_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_global_return;

typedef struct PtxParser_local_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_local_return;

typedef struct PtxParser_param_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_param_return;

typedef struct PtxParser_reg_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_reg_return;

typedef struct PtxParser_shared_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_shared_return;

typedef struct PtxParser_sreg_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_sreg_return;

typedef struct PtxParser_tex_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_tex_return;

typedef struct PtxParser_instruction_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_instruction_return;

typedef struct PtxParser_instruction_aux_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_instruction_aux_return;

typedef struct PtxParser_predicate_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_predicate_return;

typedef struct PtxParser_i_abs_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_abs_return;

typedef struct PtxParser_i_abs_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_abs_type_return;

typedef struct PtxParser_i_abs_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_abs_opr_return;

typedef struct PtxParser_i_add_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_add_return;

typedef struct PtxParser_i_add_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_add_type_return;

typedef struct PtxParser_i_add_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_add_opr_return;

typedef struct PtxParser_i_addc_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_addc_return;

typedef struct PtxParser_i_addc_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_addc_type_return;

typedef struct PtxParser_i_addc_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_addc_opr_return;

typedef struct PtxParser_i_and_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_and_return;

typedef struct PtxParser_i_and_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_and_type_return;

typedef struct PtxParser_i_and_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_and_opr_return;

typedef struct PtxParser_i_atom_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_atom_return;

typedef struct PtxParser_i_atom_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_atom_type_return;

typedef struct PtxParser_i_atom_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_atom_opr_return;

typedef struct PtxParser_i_bar_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_bar_return;

typedef struct PtxParser_i_bar1_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_bar1_return;

typedef struct PtxParser_i_bar1_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_bar1_type_return;

typedef struct PtxParser_i_bar1_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_bar1_opr_return;

typedef struct PtxParser_i_bar2_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_bar2_return;

typedef struct PtxParser_i_bar2_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_bar2_type_return;

typedef struct PtxParser_i_bar2_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_bar2_opr_return;

typedef struct PtxParser_i_bar3_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_bar3_return;

typedef struct PtxParser_i_bar3_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_bar3_type_return;

typedef struct PtxParser_i_bar3_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_bar3_opr_return;

typedef struct PtxParser_i_bar4_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_bar4_return;

typedef struct PtxParser_i_bar4_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_bar4_type_return;

typedef struct PtxParser_i_bar4_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_bar4_opr_return;

typedef struct PtxParser_i_bfe_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_bfe_return;

typedef struct PtxParser_i_bfe_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_bfe_type_return;

typedef struct PtxParser_i_bfe_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_bfe_opr_return;

typedef struct PtxParser_i_bfi_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_bfi_return;

typedef struct PtxParser_i_bfi_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_bfi_type_return;

typedef struct PtxParser_i_bfi_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_bfi_opr_return;

typedef struct PtxParser_i_bfind_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_bfind_return;

typedef struct PtxParser_i_bfind_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_bfind_type_return;

typedef struct PtxParser_i_bfind_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_bfind_opr_return;

typedef struct PtxParser_i_bra_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_bra_return;

typedef struct PtxParser_i_bra_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_bra_type_return;

typedef struct PtxParser_i_bra_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_bra_opr_return;

typedef struct PtxParser_i_brev_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_brev_return;

typedef struct PtxParser_i_brev_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_brev_type_return;

typedef struct PtxParser_i_brev_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_brev_opr_return;

typedef struct PtxParser_i_brkpt_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_brkpt_return;

typedef struct PtxParser_i_call_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_call_return;

typedef struct PtxParser_i_call_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_call_type_return;

typedef struct PtxParser_flist_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_flist_return;

typedef struct PtxParser_fproto_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_fproto_return;

typedef struct PtxParser_i_clz_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_clz_return;

typedef struct PtxParser_i_clz_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_clz_type_return;

typedef struct PtxParser_i_clz_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_clz_opr_return;

typedef struct PtxParser_i_cnot_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_cnot_return;

typedef struct PtxParser_i_cnot_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_cnot_type_return;

typedef struct PtxParser_i_cnot_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_cnot_opr_return;

typedef struct PtxParser_i_copysign_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_copysign_return;

typedef struct PtxParser_i_copysign_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_copysign_type_return;

typedef struct PtxParser_i_copysign_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_copysign_opr_return;

typedef struct PtxParser_i_cos_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_cos_return;

typedef struct PtxParser_i_cos_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_cos_type_return;

typedef struct PtxParser_i_cos_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_cos_opr_return;

typedef struct PtxParser_i_cvt_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_cvt_return;

typedef struct PtxParser_i_cvt_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_cvt_type_return;

typedef struct PtxParser_i_cvt_irnd_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_cvt_irnd_return;

typedef struct PtxParser_i_cvt_irnd_aux_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_cvt_irnd_aux_return;

typedef struct PtxParser_i_cvt_frnd_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_cvt_frnd_return;

typedef struct PtxParser_i_cvt_frnd_aux_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_cvt_frnd_aux_return;

typedef struct PtxParser_i_cvt_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_cvt_opr_return;

typedef struct PtxParser_i_cvta_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_cvta_return;

typedef struct PtxParser_i_cvta_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_cvta_type_return;

typedef struct PtxParser_i_cvta_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_cvta_opr_return;

typedef struct PtxParser_i_div_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_div_return;

typedef struct PtxParser_i_div_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_div_type_return;

typedef struct PtxParser_i_div_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_div_opr_return;

typedef struct PtxParser_i_ex2_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_ex2_return;

typedef struct PtxParser_i_ex2_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_ex2_type_return;

typedef struct PtxParser_i_ex2_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_ex2_opr_return;

typedef struct PtxParser_i_exit_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_exit_return;

typedef struct PtxParser_i_fma_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_fma_return;

typedef struct PtxParser_i_fma_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_fma_type_return;

typedef struct PtxParser_i_fma_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_fma_opr_return;

typedef struct PtxParser_i_isspacep_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_isspacep_return;

typedef struct PtxParser_i_isspacep_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_isspacep_type_return;

typedef struct PtxParser_i_isspacep_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_isspacep_opr_return;

typedef struct PtxParser_i_ld_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_ld_return;

typedef struct PtxParser_i_ld_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_ld_type_return;

typedef struct PtxParser_i_ld_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_ld_opr_return;

typedef struct PtxParser_i_ldu_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_ldu_return;

typedef struct PtxParser_i_ldu_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_ldu_type_return;

typedef struct PtxParser_i_ldu_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_ldu_opr_return;

typedef struct PtxParser_i_lg2_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_lg2_return;

typedef struct PtxParser_i_lg2_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_lg2_type_return;

typedef struct PtxParser_i_lg2_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_lg2_opr_return;

typedef struct PtxParser_i_mad_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_mad_return;

typedef struct PtxParser_i_mad_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_mad_type_return;

typedef struct PtxParser_i_mad_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_mad_opr_return;

typedef struct PtxParser_i_mad24_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_mad24_return;

typedef struct PtxParser_i_mad24_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_mad24_type_return;

typedef struct PtxParser_i_mad24_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_mad24_opr_return;

typedef struct PtxParser_i_max_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_max_return;

typedef struct PtxParser_i_max_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_max_type_return;

typedef struct PtxParser_i_max_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_max_opr_return;

typedef struct PtxParser_i_membar_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_membar_return;

typedef struct PtxParser_i_membar_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_membar_type_return;

typedef struct PtxParser_i_min_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_min_return;

typedef struct PtxParser_i_min_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_min_type_return;

typedef struct PtxParser_i_min_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_min_opr_return;

typedef struct PtxParser_i_mov_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_mov_return;

typedef struct PtxParser_i_mov_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_mov_type_return;

typedef struct PtxParser_i_mov_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_mov_opr_return;

typedef struct PtxParser_i_mul_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_mul_return;

typedef struct PtxParser_i_mul_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_mul_type_return;

typedef struct PtxParser_i_mul_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_mul_opr_return;

typedef struct PtxParser_i_mul24_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_mul24_return;

typedef struct PtxParser_i_mul24_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_mul24_type_return;

typedef struct PtxParser_i_mul24_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_mul24_opr_return;

typedef struct PtxParser_i_neg_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_neg_return;

typedef struct PtxParser_i_neg_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_neg_type_return;

typedef struct PtxParser_i_neg_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_neg_opr_return;

typedef struct PtxParser_i_not_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_not_return;

typedef struct PtxParser_i_not_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_not_type_return;

typedef struct PtxParser_i_not_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_not_opr_return;

typedef struct PtxParser_i_or_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_or_return;

typedef struct PtxParser_i_or_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_or_type_return;

typedef struct PtxParser_i_or_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_or_opr_return;

typedef struct PtxParser_i_pmevent_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_pmevent_return;

typedef struct PtxParser_i_pmevent_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_pmevent_opr_return;

typedef struct PtxParser_i_popc_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_popc_return;

typedef struct PtxParser_i_popc_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_popc_type_return;

typedef struct PtxParser_i_popc_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_popc_opr_return;

typedef struct PtxParser_i_prefetch_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_prefetch_return;

typedef struct PtxParser_i_prefetch_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_prefetch_type_return;

typedef struct PtxParser_i_prefetch_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_prefetch_opr_return;

typedef struct PtxParser_i_prefetchu_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_prefetchu_return;

typedef struct PtxParser_i_prefetchu_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_prefetchu_type_return;

typedef struct PtxParser_i_prefetchu_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_prefetchu_opr_return;

typedef struct PtxParser_i_prmt_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_prmt_return;

typedef struct PtxParser_i_prmt_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_prmt_type_return;

typedef struct PtxParser_i_prmt_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_prmt_opr_return;

typedef struct PtxParser_i_rcp_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_rcp_return;

typedef struct PtxParser_i_rcp_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_rcp_type_return;

typedef struct PtxParser_i_rcp_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_rcp_opr_return;

typedef struct PtxParser_i_red_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_red_return;

typedef struct PtxParser_i_red_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_red_type_return;

typedef struct PtxParser_i_red_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_red_opr_return;

typedef struct PtxParser_i_rem_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_rem_return;

typedef struct PtxParser_i_rem_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_rem_type_return;

typedef struct PtxParser_i_rem_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_rem_opr_return;

typedef struct PtxParser_i_ret_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_ret_return;

typedef struct PtxParser_i_ret_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_ret_type_return;

typedef struct PtxParser_i_rsqrt_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_rsqrt_return;

typedef struct PtxParser_i_rsqrt_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_rsqrt_type_return;

typedef struct PtxParser_i_rsqrt_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_rsqrt_opr_return;

typedef struct PtxParser_i_sad_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_sad_return;

typedef struct PtxParser_i_sad_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_sad_type_return;

typedef struct PtxParser_i_sad_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_sad_opr_return;

typedef struct PtxParser_i_selp_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_selp_return;

typedef struct PtxParser_i_selp_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_selp_type_return;

typedef struct PtxParser_i_selp_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_selp_opr_return;

typedef struct PtxParser_i_set_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_set_return;

typedef struct PtxParser_i_set1_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_set1_return;

typedef struct PtxParser_i_set1_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_set1_type_return;

typedef struct PtxParser_i_set1_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_set1_opr_return;

typedef struct PtxParser_i_set2_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_set2_return;

typedef struct PtxParser_i_set2_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_set2_type_return;

typedef struct PtxParser_i_set2_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_set2_opr_return;

typedef struct PtxParser_i_setp_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_setp_return;

typedef struct PtxParser_i_setp1_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_setp1_return;

typedef struct PtxParser_i_setp1_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_setp1_type_return;

typedef struct PtxParser_i_setp1_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_setp1_opr_return;

typedef struct PtxParser_i_setp2_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_setp2_return;

typedef struct PtxParser_i_setp2_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_setp2_type_return;

typedef struct PtxParser_i_setp2_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_setp2_opr_return;

typedef struct PtxParser_i_shl_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_shl_return;

typedef struct PtxParser_i_shl_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_shl_type_return;

typedef struct PtxParser_i_shl_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_shl_opr_return;

typedef struct PtxParser_i_shr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_shr_return;

typedef struct PtxParser_i_shr_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_shr_type_return;

typedef struct PtxParser_i_shr_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_shr_opr_return;

typedef struct PtxParser_i_sin_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_sin_return;

typedef struct PtxParser_i_sin_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_sin_type_return;

typedef struct PtxParser_i_sin_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_sin_opr_return;

typedef struct PtxParser_i_slct_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_slct_return;

typedef struct PtxParser_i_slct_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_slct_type_return;

typedef struct PtxParser_i_slct_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_slct_opr_return;

typedef struct PtxParser_i_sqrt_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_sqrt_return;

typedef struct PtxParser_i_sqrt_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_sqrt_type_return;

typedef struct PtxParser_i_sqrt_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_sqrt_opr_return;

typedef struct PtxParser_i_st_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_st_return;

typedef struct PtxParser_i_st_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_st_type_return;

typedef struct PtxParser_i_st_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_st_opr_return;

typedef struct PtxParser_i_sub_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_sub_return;

typedef struct PtxParser_i_sub_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_sub_type_return;

typedef struct PtxParser_i_sub_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_sub_opr_return;

typedef struct PtxParser_i_subc_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_subc_return;

typedef struct PtxParser_i_subc_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_subc_type_return;

typedef struct PtxParser_i_subc_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_subc_opr_return;

typedef struct PtxParser_i_suld_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_suld_return;

typedef struct PtxParser_i_suld_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_suld_type_return;

typedef struct PtxParser_i_suld_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_suld_opr_return;

typedef struct PtxParser_i_sured_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_sured_return;

typedef struct PtxParser_i_sured_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_sured_type_return;

typedef struct PtxParser_i_sured_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_sured_opr_return;

typedef struct PtxParser_i_sust_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_sust_return;

typedef struct PtxParser_i_sust_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_sust_type_return;

typedef struct PtxParser_i_sust_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_sust_opr_return;

typedef struct PtxParser_i_suq_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_suq_return;

typedef struct PtxParser_i_suq_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_suq_type_return;

typedef struct PtxParser_i_suq_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_suq_opr_return;

typedef struct PtxParser_i_testp_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_testp_return;

typedef struct PtxParser_i_testp_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_testp_type_return;

typedef struct PtxParser_i_testp_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_testp_opr_return;

typedef struct PtxParser_i_tex_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_tex_return;

typedef struct PtxParser_i_tex_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_tex_type_return;

typedef struct PtxParser_i_tex_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_tex_opr_return;

typedef struct PtxParser_i_txq_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_txq_return;

typedef struct PtxParser_i_txq_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_txq_type_return;

typedef struct PtxParser_i_txq_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_txq_opr_return;

typedef struct PtxParser_i_trap_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_trap_return;

typedef struct PtxParser_i_vabsdiff_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_vabsdiff_return;

typedef struct PtxParser_i_vadd_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_vadd_return;

typedef struct PtxParser_i_vmad_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_vmad_return;

typedef struct PtxParser_i_vmax_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_vmax_return;

typedef struct PtxParser_i_vmin_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_vmin_return;

typedef struct PtxParser_i_vset_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_vset_return;

typedef struct PtxParser_i_vshl_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_vshl_return;

typedef struct PtxParser_i_vshr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_vshr_return;

typedef struct PtxParser_i_vsub_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_vsub_return;

typedef struct PtxParser_i_vote_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_vote_return;

typedef struct PtxParser_i_vote_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_vote_type_return;

typedef struct PtxParser_i_vote_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_vote_opr_return;

typedef struct PtxParser_i_xor_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_xor_return;

typedef struct PtxParser_i_xor_type_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_xor_type_return;

typedef struct PtxParser_i_xor_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_i_xor_opr_return;

typedef struct PtxParser_opr_register_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_opr_register_return;

typedef struct PtxParser_opr_register_or_constant_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_opr_register_or_constant_return;

typedef struct PtxParser_opr_register_or_constant2_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_opr_register_or_constant2_return;

typedef struct PtxParser_opr_register_or_constant3_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_opr_register_or_constant3_return;

typedef struct PtxParser_opr_register_or_constant4_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_opr_register_or_constant4_return;

typedef struct PtxParser_opr_register_or_constant5_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_opr_register_or_constant5_return;

typedef struct PtxParser_opr_label_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_opr_label_return;

typedef struct PtxParser_opr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_opr_return;

typedef struct PtxParser_opr_aux_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_opr_aux_return;

typedef struct PtxParser_opr2_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_opr2_return;

typedef struct PtxParser_opr3_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_opr3_return;

typedef struct PtxParser_opr4_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_opr4_return;

typedef struct PtxParser_opr5_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_opr5_return;

typedef struct PtxParser_constant_expression_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_constant_expression_return;

typedef struct PtxParser_constant_expression_aux_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_constant_expression_aux_return;

typedef struct PtxParser_conditional_expression_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_conditional_expression_return;

typedef struct PtxParser_conditional_or_expression_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_conditional_or_expression_return;

typedef struct PtxParser_conditional_and_expression_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_conditional_and_expression_return;

typedef struct PtxParser_inclusive_or_expression_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_inclusive_or_expression_return;

typedef struct PtxParser_exclusive_or_expression_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_exclusive_or_expression_return;

typedef struct PtxParser_and_expression_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_and_expression_return;

typedef struct PtxParser_equality_expression_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_equality_expression_return;

typedef struct PtxParser_relational_expression_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_relational_expression_return;

typedef struct PtxParser_relational_op_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_relational_op_return;

typedef struct PtxParser_shift_expression_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_shift_expression_return;

typedef struct PtxParser_shift_op_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_shift_op_return;

typedef struct PtxParser_additive_expression_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_additive_expression_return;

typedef struct PtxParser_multiplicative_expression_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_multiplicative_expression_return;

typedef struct PtxParser_unary_expression_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_unary_expression_return;

typedef struct PtxParser_unary_expression_not_plus_minus_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_unary_expression_not_plus_minus_return;

typedef struct PtxParser_cast_expression_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_cast_expression_return;

typedef struct PtxParser_cast_expression_aux_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_cast_expression_aux_return;

typedef struct PtxParser_primary_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_primary_return;

typedef struct PtxParser_par_expression_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_par_expression_return;

typedef struct PtxParser_integer_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_integer_return;

typedef struct PtxParser_float__return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_float__return;

typedef struct PtxParser_base_10_integer_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_base_10_integer_return;

typedef struct PtxParser_base_8_integer_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_base_8_integer_return;

typedef struct PtxParser_base_16_integer_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;
   
}
    PtxParser_base_16_integer_return;



/** Context tracking structure for PtxParser
 */
struct PtxParser_Ctx_struct
{
    /** Built in ANTLR3 context tracker contains all the generic elements
     *  required for context tracking.
     */
    pANTLR3_PARSER   pParser;


     PtxParser_prog_return (*prog)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_version_return (*version)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_target_return (*target)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_target_list_return (*target_list)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_statement_return (*statement)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_label_decl_return (*label_decl)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_semicolon_terminated_statement_return (*semicolon_terminated_statement)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_unterminated_statement_return (*unterminated_statement)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_semicolon_terminated_directive_return (*semicolon_terminated_directive)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_unterminated_directive_return (*unterminated_directive)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_entry_return (*entry)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_entry_aux_return (*entry_aux)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_kernel_name_return (*kernel_name)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_entry_param_list_return (*entry_param_list)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_entry_param_return (*entry_param)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_entry_space_return (*entry_space)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_align_return (*align)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_byte_count_return (*byte_count)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_entry_param_type_return (*entry_param_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_entry_body_return (*entry_body)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_fundamental_type_return (*fundamental_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_fundamental_type_aux_return (*fundamental_type_aux)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_vector_type_return (*vector_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_vector_type_aux_return (*vector_type_aux)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_opaque_type_return (*opaque_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_opaque_type_aux_return (*opaque_type_aux)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_func_return (*func)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_func_aux_return (*func_aux)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_func_name_return (*func_name)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_func_ret_list_return (*func_ret_list)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_func_ret_return (*func_ret)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_func_ret_space_return (*func_ret_space)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_func_ret_type_return (*func_ret_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_func_param_list_return (*func_param_list)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_func_param_return (*func_param)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_func_param_space_return (*func_param_space)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_func_param_type_return (*func_param_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_func_body_return (*func_body)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_control_flow_directive_return (*control_flow_directive)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_branch_targets_return (*branch_targets)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_list_of_labels_return (*list_of_labels)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_call_targets_return (*call_targets)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_call_prototype_return (*call_prototype)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_call_param_list_return (*call_param_list)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_call_param_return (*call_param)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_call_param_space_return (*call_param_space)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_call_param_type_return (*call_param_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_performance_tuning_directives_return (*performance_tuning_directives)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_performance_tuning_directive_return (*performance_tuning_directive)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_maxnreg_return (*maxnreg)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_maxntid_return (*maxntid)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_reqntid_return (*reqntid)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_minnctapersm_return (*minnctapersm)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_maxnctapersm_return (*maxnctapersm)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_pragma_return (*pragma)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_list_of_strings_return (*list_of_strings)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_debugging_directive_return (*debugging_directive)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_dwarf_return (*dwarf)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_file_return (*file)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_section_return (*section)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_loc_return (*loc)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_linking_directive_return (*linking_directive)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_extern__return (*extern_)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_visible_return (*visible)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_identifier_decl_return (*identifier_decl)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_identifier_decl_aux_return (*identifier_decl_aux)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_variable_declarator_list_return (*variable_declarator_list)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_variable_declarator_list_with_initializer_return (*variable_declarator_list_with_initializer)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_variable_declarator_return (*variable_declarator)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_array_spec_return (*array_spec)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_array_spec_aux_return (*array_spec_aux)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_parameterized_register_spec_return (*parameterized_register_spec)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_id_or_opcode_return (*id_or_opcode)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_opcode_return (*opcode)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_variable_declarator_with_initializer_return (*variable_declarator_with_initializer)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_variable_equal_initializer_return (*variable_equal_initializer)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_variable_initializer_return (*variable_initializer)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_aggregate_initializer_return (*aggregate_initializer)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_type_return (*type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_id_return (*id)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_state_space_specifier_return (*state_space_specifier)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_state_space_specifier_aux_return (*state_space_specifier_aux)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_global_space_specifier_return (*global_space_specifier)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_const_space_specifier_return (*const_space_specifier)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_const__return (*const_)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_global_return (*global)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_local_return (*local)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_param_return (*param)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_reg_return (*reg)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_shared_return (*shared)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_sreg_return (*sreg)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_tex_return (*tex)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_instruction_return (*instruction)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_instruction_aux_return (*instruction_aux)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_predicate_return (*predicate)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_abs_return (*i_abs)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_abs_type_return (*i_abs_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_abs_opr_return (*i_abs_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_add_return (*i_add)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_add_type_return (*i_add_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_add_opr_return (*i_add_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_addc_return (*i_addc)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_addc_type_return (*i_addc_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_addc_opr_return (*i_addc_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_and_return (*i_and)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_and_type_return (*i_and_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_and_opr_return (*i_and_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_atom_return (*i_atom)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_atom_type_return (*i_atom_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_atom_opr_return (*i_atom_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_bar_return (*i_bar)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_bar1_return (*i_bar1)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_bar1_type_return (*i_bar1_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_bar1_opr_return (*i_bar1_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_bar2_return (*i_bar2)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_bar2_type_return (*i_bar2_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_bar2_opr_return (*i_bar2_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_bar3_return (*i_bar3)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_bar3_type_return (*i_bar3_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_bar3_opr_return (*i_bar3_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_bar4_return (*i_bar4)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_bar4_type_return (*i_bar4_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_bar4_opr_return (*i_bar4_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_bfe_return (*i_bfe)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_bfe_type_return (*i_bfe_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_bfe_opr_return (*i_bfe_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_bfi_return (*i_bfi)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_bfi_type_return (*i_bfi_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_bfi_opr_return (*i_bfi_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_bfind_return (*i_bfind)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_bfind_type_return (*i_bfind_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_bfind_opr_return (*i_bfind_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_bra_return (*i_bra)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_bra_type_return (*i_bra_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_bra_opr_return (*i_bra_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_brev_return (*i_brev)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_brev_type_return (*i_brev_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_brev_opr_return (*i_brev_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_brkpt_return (*i_brkpt)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_call_return (*i_call)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_call_type_return (*i_call_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_flist_return (*flist)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_fproto_return (*fproto)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_clz_return (*i_clz)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_clz_type_return (*i_clz_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_clz_opr_return (*i_clz_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_cnot_return (*i_cnot)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_cnot_type_return (*i_cnot_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_cnot_opr_return (*i_cnot_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_copysign_return (*i_copysign)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_copysign_type_return (*i_copysign_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_copysign_opr_return (*i_copysign_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_cos_return (*i_cos)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_cos_type_return (*i_cos_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_cos_opr_return (*i_cos_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_cvt_return (*i_cvt)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_cvt_type_return (*i_cvt_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_cvt_irnd_return (*i_cvt_irnd)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_cvt_irnd_aux_return (*i_cvt_irnd_aux)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_cvt_frnd_return (*i_cvt_frnd)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_cvt_frnd_aux_return (*i_cvt_frnd_aux)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_cvt_opr_return (*i_cvt_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_cvta_return (*i_cvta)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_cvta_type_return (*i_cvta_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_cvta_opr_return (*i_cvta_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_div_return (*i_div)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_div_type_return (*i_div_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_div_opr_return (*i_div_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_ex2_return (*i_ex2)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_ex2_type_return (*i_ex2_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_ex2_opr_return (*i_ex2_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_exit_return (*i_exit)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_fma_return (*i_fma)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_fma_type_return (*i_fma_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_fma_opr_return (*i_fma_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_isspacep_return (*i_isspacep)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_isspacep_type_return (*i_isspacep_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_isspacep_opr_return (*i_isspacep_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_ld_return (*i_ld)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_ld_type_return (*i_ld_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_ld_opr_return (*i_ld_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_ldu_return (*i_ldu)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_ldu_type_return (*i_ldu_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_ldu_opr_return (*i_ldu_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_lg2_return (*i_lg2)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_lg2_type_return (*i_lg2_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_lg2_opr_return (*i_lg2_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_mad_return (*i_mad)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_mad_type_return (*i_mad_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_mad_opr_return (*i_mad_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_mad24_return (*i_mad24)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_mad24_type_return (*i_mad24_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_mad24_opr_return (*i_mad24_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_max_return (*i_max)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_max_type_return (*i_max_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_max_opr_return (*i_max_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_membar_return (*i_membar)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_membar_type_return (*i_membar_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_min_return (*i_min)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_min_type_return (*i_min_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_min_opr_return (*i_min_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_mov_return (*i_mov)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_mov_type_return (*i_mov_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_mov_opr_return (*i_mov_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_mul_return (*i_mul)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_mul_type_return (*i_mul_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_mul_opr_return (*i_mul_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_mul24_return (*i_mul24)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_mul24_type_return (*i_mul24_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_mul24_opr_return (*i_mul24_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_neg_return (*i_neg)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_neg_type_return (*i_neg_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_neg_opr_return (*i_neg_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_not_return (*i_not)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_not_type_return (*i_not_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_not_opr_return (*i_not_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_or_return (*i_or)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_or_type_return (*i_or_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_or_opr_return (*i_or_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_pmevent_return (*i_pmevent)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_pmevent_opr_return (*i_pmevent_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_popc_return (*i_popc)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_popc_type_return (*i_popc_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_popc_opr_return (*i_popc_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_prefetch_return (*i_prefetch)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_prefetch_type_return (*i_prefetch_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_prefetch_opr_return (*i_prefetch_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_prefetchu_return (*i_prefetchu)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_prefetchu_type_return (*i_prefetchu_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_prefetchu_opr_return (*i_prefetchu_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_prmt_return (*i_prmt)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_prmt_type_return (*i_prmt_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_prmt_opr_return (*i_prmt_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_rcp_return (*i_rcp)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_rcp_type_return (*i_rcp_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_rcp_opr_return (*i_rcp_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_red_return (*i_red)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_red_type_return (*i_red_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_red_opr_return (*i_red_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_rem_return (*i_rem)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_rem_type_return (*i_rem_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_rem_opr_return (*i_rem_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_ret_return (*i_ret)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_ret_type_return (*i_ret_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_rsqrt_return (*i_rsqrt)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_rsqrt_type_return (*i_rsqrt_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_rsqrt_opr_return (*i_rsqrt_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_sad_return (*i_sad)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_sad_type_return (*i_sad_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_sad_opr_return (*i_sad_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_selp_return (*i_selp)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_selp_type_return (*i_selp_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_selp_opr_return (*i_selp_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_set_return (*i_set)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_set1_return (*i_set1)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_set1_type_return (*i_set1_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_set1_opr_return (*i_set1_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_set2_return (*i_set2)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_set2_type_return (*i_set2_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_set2_opr_return (*i_set2_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_setp_return (*i_setp)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_setp1_return (*i_setp1)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_setp1_type_return (*i_setp1_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_setp1_opr_return (*i_setp1_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_setp2_return (*i_setp2)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_setp2_type_return (*i_setp2_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_setp2_opr_return (*i_setp2_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_shl_return (*i_shl)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_shl_type_return (*i_shl_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_shl_opr_return (*i_shl_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_shr_return (*i_shr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_shr_type_return (*i_shr_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_shr_opr_return (*i_shr_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_sin_return (*i_sin)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_sin_type_return (*i_sin_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_sin_opr_return (*i_sin_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_slct_return (*i_slct)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_slct_type_return (*i_slct_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_slct_opr_return (*i_slct_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_sqrt_return (*i_sqrt)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_sqrt_type_return (*i_sqrt_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_sqrt_opr_return (*i_sqrt_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_st_return (*i_st)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_st_type_return (*i_st_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_st_opr_return (*i_st_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_sub_return (*i_sub)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_sub_type_return (*i_sub_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_sub_opr_return (*i_sub_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_subc_return (*i_subc)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_subc_type_return (*i_subc_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_subc_opr_return (*i_subc_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_suld_return (*i_suld)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_suld_type_return (*i_suld_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_suld_opr_return (*i_suld_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_sured_return (*i_sured)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_sured_type_return (*i_sured_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_sured_opr_return (*i_sured_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_sust_return (*i_sust)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_sust_type_return (*i_sust_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_sust_opr_return (*i_sust_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_suq_return (*i_suq)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_suq_type_return (*i_suq_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_suq_opr_return (*i_suq_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_testp_return (*i_testp)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_testp_type_return (*i_testp_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_testp_opr_return (*i_testp_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_tex_return (*i_tex)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_tex_type_return (*i_tex_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_tex_opr_return (*i_tex_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_txq_return (*i_txq)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_txq_type_return (*i_txq_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_txq_opr_return (*i_txq_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_trap_return (*i_trap)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_vabsdiff_return (*i_vabsdiff)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_vadd_return (*i_vadd)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_vmad_return (*i_vmad)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_vmax_return (*i_vmax)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_vmin_return (*i_vmin)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_vset_return (*i_vset)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_vshl_return (*i_vshl)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_vshr_return (*i_vshr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_vsub_return (*i_vsub)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_vote_return (*i_vote)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_vote_type_return (*i_vote_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_vote_opr_return (*i_vote_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_xor_return (*i_xor)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_xor_type_return (*i_xor_type)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_i_xor_opr_return (*i_xor_opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_opr_register_return (*opr_register)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_opr_register_or_constant_return (*opr_register_or_constant)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_opr_register_or_constant2_return (*opr_register_or_constant2)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_opr_register_or_constant3_return (*opr_register_or_constant3)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_opr_register_or_constant4_return (*opr_register_or_constant4)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_opr_register_or_constant5_return (*opr_register_or_constant5)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_opr_label_return (*opr_label)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_opr_return (*opr)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_opr_aux_return (*opr_aux)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_opr2_return (*opr2)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_opr3_return (*opr3)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_opr4_return (*opr4)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_opr5_return (*opr5)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_constant_expression_return (*constant_expression)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_constant_expression_aux_return (*constant_expression_aux)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_conditional_expression_return (*conditional_expression)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_conditional_or_expression_return (*conditional_or_expression)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_conditional_and_expression_return (*conditional_and_expression)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_inclusive_or_expression_return (*inclusive_or_expression)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_exclusive_or_expression_return (*exclusive_or_expression)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_and_expression_return (*and_expression)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_equality_expression_return (*equality_expression)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_relational_expression_return (*relational_expression)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_relational_op_return (*relational_op)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_shift_expression_return (*shift_expression)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_shift_op_return (*shift_op)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_additive_expression_return (*additive_expression)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_multiplicative_expression_return (*multiplicative_expression)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_unary_expression_return (*unary_expression)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_unary_expression_not_plus_minus_return (*unary_expression_not_plus_minus)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_cast_expression_return (*cast_expression)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_cast_expression_aux_return (*cast_expression_aux)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_primary_return (*primary)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_par_expression_return (*par_expression)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_integer_return (*integer)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_float__return (*float_)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_base_10_integer_return (*base_10_integer)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_base_8_integer_return (*base_8_integer)	(struct PtxParser_Ctx_struct * ctx);
     PtxParser_base_16_integer_return (*base_16_integer)	(struct PtxParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred17_Ptx)	(struct PtxParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred49_Ptx)	(struct PtxParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred54_Ptx)	(struct PtxParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred66_Ptx)	(struct PtxParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred72_Ptx)	(struct PtxParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred73_Ptx)	(struct PtxParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred89_Ptx)	(struct PtxParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred322_Ptx)	(struct PtxParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred323_Ptx)	(struct PtxParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred325_Ptx)	(struct PtxParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred326_Ptx)	(struct PtxParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred342_Ptx)	(struct PtxParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred343_Ptx)	(struct PtxParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred350_Ptx)	(struct PtxParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred373_Ptx)	(struct PtxParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred741_Ptx)	(struct PtxParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred801_Ptx)	(struct PtxParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred1042_Ptx)	(struct PtxParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred1056_Ptx)	(struct PtxParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred1073_Ptx)	(struct PtxParser_Ctx_struct * ctx);
     ANTLR3_BOOLEAN (*synpred1080_Ptx)	(struct PtxParser_Ctx_struct * ctx);
    // Delegated rules
    const char * (*getGrammarFileName)();
    void	    (*free)   (struct PtxParser_Ctx_struct * ctx);
    /* @headerFile.members() */
    pANTLR3_BASE_TREE_ADAPTOR	adaptor;
    pANTLR3_VECTOR_FACTORY		vectors;
    /* End @headerFile.members() */
};

// Function protoypes for the constructor functions that external translation units
// such as delegators and delegates may wish to call.
//
ANTLR3_API pPtxParser PtxParserNew         (pANTLR3_COMMON_TOKEN_STREAM instream);
ANTLR3_API pPtxParser PtxParserNewSSD      (pANTLR3_COMMON_TOKEN_STREAM instream, pANTLR3_RECOGNIZER_SHARED_STATE state);

/** Symbolic definitions of all the tokens that the parser will work with.
 * \{
 *
 * Antlr will define EOF, but we can't use that as it it is too common in
 * in C header files and that would be confusing. There is no way to filter this out at the moment
 * so we just undef it here for now. That isn't the value we get back from C recognizers
 * anyway. We are looking for ANTLR3_TOKEN_EOF.
 */
#ifdef	EOF
#undef	EOF
#endif
#ifdef	Tokens
#undef	Tokens
#endif 
#define K_INFINITE      151
#define T_GE      256
#define KI_BAR      10
#define KI_PREFETCHU      46
#define K_F64      133
#define U_DEBUG_PUBNAMES      288
#define K_U32      221
#define KI_CVTA      23
#define K_ADDR_MODE_2      91
#define KI_LG2      31
#define K_CLAMP      115
#define T_STAR      277
#define K_GE      141
#define T_GT      257
#define TREE_PARAM_LIST      303
#define K_PRED      185
#define K_DEC      120
#define KI_SHL      57
#define K_ADDR_MODE_0      89
#define K_ADDR_MODE_1      90
#define EOF      -1
#define T_PERCENT      272
#define T_AND      242
#define KI_CVT      22
#define K_GL      143
#define TREE_PERF      305
#define K_RC8      188
#define KI_SHR      58
#define K_MINNCTAPERSM      168
#define K_GT      145
#define K_CALLTARGETS      108
#define KI_BRA      14
#define K_ADD      88
#define TREE_ENTRY      299
#define K_HI      148
#define K_ECR      124
#define K_WT      235
#define KI_AND      8
#define T_OROR      271
#define K_SAT      206
#define K_HS      149
#define K_VB      227
#define KI_LD      29
#define K_SHARED      208
#define K_FUNC      139
#define K_SYNC      213
#define K_PRAGMA      184
#define KI_DIV      24
#define K_NUMBER      178
#define KI_VSHR      81
#define KI_COPYSIGN      20
#define K_RED      190
#define K_CHANNEL_ORDER      114
#define K_WIDE      233
#define KI_VSHL      80
#define K_NEU      171
#define KI_CALL      17
#define K_U64      222
#define KI_MIN      36
#define K_WB      232
#define KI_CNOT      19
#define K_LTU      161
#define K_RCP      189
#define WS      289
#define K_LOCAL      158
#define K_EQ      126
#define T_SLASH      276
#define FollowSym      314
#define K_V4      226
#define KI_SURED      67
#define KI_SIN      59
#define T_LTLT      262
#define K_V2      225
#define KI_VMIN      77
#define T_MINUS      263
#define K_SREG      210
#define K_DWARF      122
#define K_MAXNREG      165
#define K_FULL      138
#define T_CB      245
#define T_CC      246
#define K_TEXREF      217
#define KI_BREV      15
#define T_UNDERSCORE      280
#define U_4BYTE      283
#define TREE_ALIGN      308
#define K_L2      153
#define TREE_INST      294
#define K_L1      152
#define KI_TRAP      71
#define KI_ADDC      7
#define T_CP      249
#define K_LOC      157
#define TREE_LABEL      293
#define K_REG      191
#define K_LE      154
#define K_F32      131
#define KI_MUL      39
#define T_GTGT      258
#define K_SECTION      207
#define K_EQU      127
#define T_ELLIPSIS      252
#define K_BALLOT      104
#define K_LS      159
#define K_LU      162
#define K_LT      160
#define KI_VSUB      82
#define KI_VADD      74
#define TREE_EXTERN      313
#define K_XOR      237
#define K_LO      156
#define KI_ABS      5
#define K_ECL      123
#define K_MAX      163
#define KI_NEG      40
#define KI_SULD      65
#define K_DEPTH      121
#define K_U16      220
#define KI_LDU      30
#define T_EQ      253
#define K_REQNTID      192
#define K_TRAP      219
#define K_CALLPROTOTYPE      107
#define KI_SETP      56
#define KI_RET      51
#define K_NAN      169
#define T_XOR      282
#define KI_REM      50
#define KI_VOTE      78
#define K_CAS      109
#define TREE_SPACE      301
#define K_SUBNORMAL      211
#define KI_XOR      83
#define K_MAXNTID      166
#define KI_RED      49
#define K_RC16      187
#define K_EXTERN      129
#define K_RZI      200
#define K_CHANNEL_DATA_TYPE      113
#define KI_COS      21
#define KI_ATOM      9
#define KI_MUL24      38
#define K_CTA      118
#define K_PARAM      182
#define OctalEscape      315
#define K_SURFREF      212
#define K_APPROX      96
#define K_MAXNCTAPERSM      164
#define T_ANDAND      243
#define KI_BFIND      13
#define KI_VSET      79
#define K_F4E      132
#define U_DEBUG_INFO      286
#define KI_POPC      44
#define T_STRING      278
#define K_SYS      214
#define KI_VMAD      75
#define K_GEU      142
#define TREE_ARRAY      306
#define KI_FMA      27
#define T_OP      269
#define T_OR      270
#define K_INC      150
#define KI_RCP      48
#define K_BRANCHTARGETS      105
#define K_OR      180
#define T_OB      266
#define KI_SLCT      60
#define T_OC      267
#define KI_SUBC      64
#define T_DOT      251
#define T_AT      244
#define K_B4E      100
#define K_HEIGHT      147
#define U_DEBUG_ABBREV      285
#define K_VISIBLE      229
#define KI_SQRT      61
#define COMMENT      4
#define TREE_VAR      300
#define K_ZERO      240
#define KI_VMAX      76
#define K_OC      179
#define K_ALL      93
#define K_A      87
#define K_SAMPLERREF      205
#define K_RMI      194
#define K_B      103
#define KI_SAD      53
#define K_B16      98
#define LINE_COMMENT      241
#define K_NOUNROLL      175
#define K_FILE      134
#define T_OCT_LITERAL      268
#define K_NS      176
#define K_P      181
#define KI_MAD      33
#define K_R      186
#define KI_ADD      6
#define KI_TESTP      69
#define T_TILDE      279
#define K_NE      170
#define K_B32      99
#define T_QUESTION      274
#define T_EQEQ      254
#define KI_CLZ      18
#define K_WIDTH      234
#define KI_VABSDIFF      73
#define KI_ST      62
#define K_G      140
#define T_SEMICOLON      275
#define KI_MOV      37
#define TREE_CONSTANT_EXPR      312
#define K_Z      239
#define K_Y      238
#define K_VOLATILE      230
#define TREE_TYPE      291
#define U_DEBUG_LINE      287
#define K_X      236
#define T_FLT_LITERAL      255
#define K_W      231
#define TREE_DEBUG      296
#define K_ANY      95
#define TREE_OPR      290
#define T_COMMA      248
#define KI_NOT      41
#define K_ENTRY      125
#define K_F16      130
#define KI_PMEVENT      43
#define K_AND      94
#define K_ALIGN      92
#define EscapeSequence      316
#define K_ARRIVE      97
#define TREE_VECTOR_TYPE      302
#define K_FTZ      137
#define K_GTU      146
#define KI_EX2      25
#define KI_MAX      34
#define K_CG      111
#define K_CHANNEL_DATA      112
#define KI_MEMBAR      35
#define T_WORD      281
#define KI_SUB      63
#define T_DEC_LITERAL      250
#define K_U8      223
#define KI_BFI      12
#define KI_ISSPACEP      28
#define K_CA      106
#define KI_BFE      11
#define K_CC      110
#define K_TEX      216
#define K_TO      218
#define TREE_BLOCK      295
#define K_UNI      224
#define K_1D      84
#define K_NOTANUMBER      174
#define K_TARGET      215
#define KI_TXQ      72
#define K_CONST      116
#define T_HEX_LITERAL      259
#define K_POPC      183
#define K_S64      203
#define T_COLON      247
#define K_RNI      196
#define KI_EXIT      26
#define K_LEU      155
#define U_BYTE      284
#define TREE_PARAM      304
#define T_PLUS      273
#define K_NUM      177
#define TREE_IRND      309
#define TREE_PRED      297
#define K_CV      119
#define K_NORMAL      172
#define K_CS      117
#define K_NORMALIZED_COORDS      173
#define KI_PREFETCH      45
#define K_S8      204
#define K_FINITE      136
#define K_VERSION      228
#define TREE_FRND      310
#define K_RZ      199
#define K_RP      197
#define K_RN      195
#define KI_BRKPT      16
#define K_FILTER_MODE      135
#define TREE_CAST      311
#define K_S32      202
#define KI_OR      42
#define K_MIN      167
#define K_3D      86
#define K_RM      193
#define K_GLOBAL      144
#define K_SHIFTAMT      209
#define K_EXCH      128
#define KI_PRMT      47
#define KI_SUST      68
#define TREE_EMPTY      292
#define T_LT      261
#define K_RPI      198
#define TREE_PAR_REGISTER      307
#define KI_RSQRT      52
#define K_B64      101
#define KI_TEX      70
#define T_LE      260
#define K_2D      85
#define KI_SUQ      66
#define T_NOTEQ      265
#define K_B8      102
#define K_S16      201
#define T_NOT      264
#define KI_SET      55
#define KI_SELP      54
#define KI_MAD24      32
#define TREE_FUNC      298
#ifdef	EOF
#undef	EOF
#define	EOF	ANTLR3_TOKEN_EOF
#endif

#ifndef TOKENSOURCE
#define TOKENSOURCE(lxr) lxr->pLexer->rec->state->tokSource
#endif

/* End of token definitions for PtxParser
 * =============================================================================
 */
/** \} */

#ifdef __cplusplus
}
#endif

#endif

/* END - Note:Keep extra line feed to satisfy UNIX systems */
