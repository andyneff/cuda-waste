/*
   Copyright 2010 Ken Domino

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/

#pragma once
#define _CRTDBG_MAP_ALLOC
#include <stdlib.h>
#include <crtdbg.h>
#include <list>
#include <map>
#include <cuda.h>
#include <cuda_runtime.h> // cudaError_t, CUDARTAPI, etc.

/// Wrapper for CUDA's dynamic link library.
#ifndef __dv
#define __dv(x)
#endif


class DEVICE
{
public:
    DEVICE();
    ~DEVICE();

    // cuda_runtime.h equivalents.
    virtual cudaError_t _cudaArrayGetInfo() = 0;
    virtual cudaError_t _cudaBindSurfaceToArray(const struct surfaceReference *surfref, const struct cudaArray *array, const struct cudaChannelFormatDesc *desc) = 0;
    virtual cudaError_t _cudaBindTexture(size_t *offset, const struct textureReference *texref, const void *devPtr, const struct cudaChannelFormatDesc *desc, size_t size __dv(UINT_MAX)) = 0;
    virtual cudaError_t _cudaBindTexture2D(size_t *offset,const struct textureReference *texref,const void *devPtr, const struct cudaChannelFormatDesc *desc,size_t width, size_t height, size_t pitch) = 0;
    virtual cudaError_t _cudaBindTextureToArray(const struct textureReference *texref, const struct cudaArray *array, const struct cudaChannelFormatDesc *desc) = 0;
    virtual cudaError_t _cudaBindTextureToMipmappedArray() = 0;
    virtual cudaError_t _cudaChooseDevice(int *device, const struct cudaDeviceProp *prop) = 0;
    virtual cudaError_t _cudaConfigureCall(dim3 gridDim, dim3 blockDim, size_t sharedMem __dv(0), cudaStream_t stream __dv(0)) = 0;
    virtual struct cudaChannelFormatDesc _cudaCreateChannelDesc(int x, int y, int z, int w, enum cudaChannelFormatKind e) = 0;
    virtual cudaError_t _cudaCreateSurfaceObject() = 0;
    virtual cudaError_t _cudaCreateTextureObject() = 0;
    virtual cudaError_t _cudaD3D10GetDevice() = 0;
    virtual cudaError_t _cudaD3D10GetDevices() = 0;
    virtual cudaError_t _cudaD3D10GetDirect3DDevice() = 0;
    virtual cudaError_t _cudaD3D10MapResources() = 0;
    virtual cudaError_t _cudaD3D10RegisterResource() = 0;
    virtual cudaError_t _cudaD3D10ResourceGetMappedArray() = 0;
    virtual cudaError_t _cudaD3D10ResourceGetMappedPitch() = 0;
    virtual cudaError_t _cudaD3D10ResourceGetMappedPointer() = 0;
    virtual cudaError_t _cudaD3D10ResourceGetMappedSize() = 0;
    virtual cudaError_t _cudaD3D10ResourceGetSurfaceDimensions() = 0;
    virtual cudaError_t _cudaD3D10ResourceSetMapFlags() = 0;
    virtual cudaError_t _cudaD3D10SetDirect3DDevice() = 0;
    virtual cudaError_t _cudaD3D10UnmapResources() = 0;
    virtual cudaError_t _cudaD3D10UnregisterResource() = 0;
    virtual cudaError_t _cudaD3D11GetDevice() = 0;
    virtual cudaError_t _cudaD3D11GetDevices() = 0;
    virtual cudaError_t _cudaD3D11GetDirect3DDevice() = 0;
    virtual cudaError_t _cudaD3D11SetDirect3DDevice() = 0;
    virtual cudaError_t _cudaD3D9Begin() = 0;
    virtual cudaError_t _cudaD3D9End() = 0;
    virtual cudaError_t _cudaD3D9GetDevice() = 0;
    virtual cudaError_t _cudaD3D9GetDevices() = 0;
    virtual cudaError_t _cudaD3D9GetDirect3DDevice() = 0;
    virtual cudaError_t _cudaD3D9MapResources() = 0;
    virtual cudaError_t _cudaD3D9MapVertexBuffer() = 0;
    virtual cudaError_t _cudaD3D9RegisterResource() = 0;
    virtual cudaError_t _cudaD3D9RegisterVertexBuffer() = 0;
    virtual cudaError_t _cudaD3D9ResourceGetMappedArray() = 0;
    virtual cudaError_t _cudaD3D9ResourceGetMappedPitch() = 0;
    virtual cudaError_t _cudaD3D9ResourceGetMappedPointer() = 0;
    virtual cudaError_t _cudaD3D9ResourceGetMappedSize() = 0;
    virtual cudaError_t _cudaD3D9ResourceGetSurfaceDimensions() = 0;
    virtual cudaError_t _cudaD3D9ResourceSetMapFlags() = 0;
    virtual cudaError_t _cudaD3D9SetDirect3DDevice() = 0;
    virtual cudaError_t _cudaD3D9UnmapResources() = 0;
    virtual cudaError_t _cudaD3D9UnmapVertexBuffer() = 0;
    virtual cudaError_t _cudaD3D9UnregisterResource() = 0;
    virtual cudaError_t _cudaD3D9UnregisterVertexBuffer() = 0;
    virtual cudaError_t _cudaDestroySurfaceObject() = 0;
    virtual cudaError_t _cudaDestroyTextureObject() = 0;
    virtual cudaError_t _cudaDeviceCanAccessPeer() = 0;
    virtual cudaError_t _cudaDeviceDisablePeerAccess() = 0;
    virtual cudaError_t _cudaDeviceEnablePeerAccess() = 0;
    virtual cudaError_t _cudaDeviceGetAttribute() = 0;
    virtual cudaError_t _cudaDeviceGetByPCIBusId() = 0;
    virtual cudaError_t _cudaDeviceGetCacheConfig() = 0;
    virtual cudaError_t _cudaDeviceGetLimit() = 0;
    virtual cudaError_t _cudaDeviceGetPCIBusId() = 0;
    virtual cudaError_t _cudaDeviceGetSharedMemConfig() = 0;
    virtual cudaError_t _cudaDeviceGetStreamPriorityRange() = 0;
    virtual cudaError_t _cudaDeviceReset() = 0;
    virtual cudaError_t _cudaDeviceSetCacheConfig() = 0;
    virtual cudaError_t _cudaDeviceSetLimit() = 0;
    virtual cudaError_t _cudaDeviceSetSharedMemConfig() = 0;
    virtual cudaError_t _cudaDeviceSynchronize() = 0;
    virtual cudaError_t _cudaDriverGetVersion(int *driverVersion) = 0;
    virtual cudaError_t _cudaEventCreate(cudaEvent_t *event) = 0;
    virtual cudaError_t _cudaEventCreateWithFlags(cudaEvent_t *event, int flags) = 0;
    virtual cudaError_t _cudaEventDestroy(cudaEvent_t event) = 0;
    virtual cudaError_t _cudaEventElapsedTime(float *ms, cudaEvent_t start, cudaEvent_t end) = 0;
    virtual cudaError_t _cudaEventQuery(cudaEvent_t event) = 0;
    virtual cudaError_t _cudaEventRecord(cudaEvent_t event, cudaStream_t stream __dv(0)) = 0;
    virtual cudaError_t _cudaEventSynchronize(cudaEvent_t event) = 0;
    virtual cudaError_t _cudaFree(void *) = 0;
    virtual cudaError_t _cudaFreeArray(struct cudaArray *array) = 0;
    virtual cudaError_t _cudaFreeHost(void *) = 0;
    virtual cudaError_t _cudaFreeMipmappedArray() = 0;
    virtual cudaError_t _cudaFuncGetAttributes(struct cudaFuncAttributes *attr, const char *func) = 0;
    virtual cudaError_t _cudaFuncSetCacheConfig(const char *func, enum cudaFuncCache cacheConfig) = 0;
    virtual cudaError_t _cudaFuncSetSharedMemConfig() = 0;
    virtual cudaError_t _cudaGetChannelDesc(struct cudaChannelFormatDesc *desc, const struct cudaArray *array) = 0;
    virtual cudaError_t _cudaGetDevice(int *device) = 0;
    virtual cudaError_t _cudaGetDeviceCount(int *count) = 0;
    virtual cudaError_t _cudaGetDeviceProperties(struct cudaDeviceProp *prop, int device) = 0;
    virtual const char* _cudaGetErrorString(cudaError_t error) = 0;
    virtual cudaError_t _cudaGetExportTable(const void **ppExportTable, const cudaUUID_t *pExportTableId) = 0;
    virtual cudaError_t _cudaGetLastError(void) = 0;
    virtual cudaError_t _cudaGetMipmappedArrayLevel() = 0;
    virtual cudaError_t _cudaGetSurfaceAlignmentOffset(size_t *offset, const struct surfaceReference *surfref) = 0;
    virtual cudaError_t _cudaGetSurfaceObjectResourceDesc() = 0;
    virtual cudaError_t _cudaGetSurfaceReference(const struct surfaceReference **surfref, const char *symbol) = 0;
    virtual cudaError_t _cudaGetSymbolAddress(void **devPtr, const char *symbol) = 0;
    virtual cudaError_t _cudaGetSymbolSize(size_t *size, const char *symbol) = 0;
    virtual cudaError_t _cudaGetTextureAlignmentOffset(size_t *offset, const struct textureReference *texref) = 0;
    virtual cudaError_t _cudaGetTextureObjectResourceDesc() = 0;
    virtual cudaError_t _cudaGetTextureObjectResourceViewDesc() = 0;
    virtual cudaError_t _cudaGetTextureObjectTextureDesc() = 0;
    virtual cudaError_t _cudaGetTextureReference(const struct textureReference **texref, const char *symbol) = 0;
    virtual cudaError_t _cudaGLGetDevices() = 0;
    virtual cudaError_t _cudaGLMapBufferObject() = 0;
    virtual cudaError_t _cudaGLMapBufferObjectAsync() = 0;
    virtual cudaError_t _cudaGLRegisterBufferObject() = 0;
    virtual cudaError_t _cudaGLSetBufferObjectMapFlags() = 0;
    virtual cudaError_t _cudaGLSetGLDevice() = 0;
    virtual cudaError_t _cudaGLUnmapBufferObject() = 0;
    virtual cudaError_t _cudaGLUnmapBufferObjectAsync() = 0;
    virtual cudaError_t _cudaGLUnregisterBufferObject() = 0;
    virtual cudaError_t _cudaGraphicsD3D10RegisterResource() = 0;
    virtual cudaError_t _cudaGraphicsD3D11RegisterResource() = 0;
    virtual cudaError_t _cudaGraphicsD3D9RegisterResource() = 0;
    virtual cudaError_t _cudaGraphicsGLRegisterBuffer() = 0;
    virtual cudaError_t _cudaGraphicsGLRegisterImage() = 0;
    virtual cudaError_t _cudaGraphicsMapResources(int count, struct cudaGraphicsResource **resources, cudaStream_t stream __dv(0)) = 0;
    virtual cudaError_t _cudaGraphicsResourceGetMappedPointer(void **devPtr, size_t *size, struct cudaGraphicsResource *resource) = 0;
    virtual cudaError_t _cudaGraphicsResourceSetMapFlags(struct cudaGraphicsResource *resource, unsigned int flags) = 0;
    virtual cudaError_t _cudaGraphicsSubResourceGetMappedArray(struct cudaArray **arrayPtr, struct cudaGraphicsResource *resource, unsigned int arrayIndex, unsigned int mipLevel) = 0;
    virtual cudaError_t _cudaGraphicsUnmapResources(int count, struct cudaGraphicsResource **resources, cudaStream_t stream __dv(0)) = 0;
    virtual cudaError_t _cudaGraphicsUnregisterResource(struct cudaGraphicsResource *resource) = 0;
    virtual cudaError_t _cudaHostAlloc(void ** ptr, size_t size, unsigned int flags) = 0;
    virtual cudaError_t _cudaHostGetDevicePointer(void ** pDevice, void * pHost, unsigned int flags) = 0;
    virtual cudaError_t _cudaHostGetFlags(unsigned int *pFlags, void *pHost) = 0;
    virtual cudaError_t _cudaHostRegister() = 0;
    virtual cudaError_t _cudaHostUnregister() = 0;
    virtual cudaError_t _cudaIpcCloseMemHandle() = 0;
    virtual cudaError_t _cudaIpcGetEventHandle() = 0;
    virtual cudaError_t _cudaIpcGetMemHandle() = 0;
    virtual cudaError_t _cudaIpcOpenEventHandle() = 0;
    virtual cudaError_t _cudaIpcOpenMemHandle() = 0;
    virtual cudaError_t _cudaLaunch(const char *entry) = 0;
    virtual cudaError_t _cudaMalloc(void ** ptr, size_t size) = 0;
    virtual cudaError_t _cudaMalloc3D(struct cudaPitchedPtr * pitchedDevPtr, struct cudaExtent extent) = 0;
    virtual cudaError_t _cudaMalloc3DArray(struct cudaArray ** array, const struct cudaChannelFormatDesc * desc, struct cudaExtent extent, unsigned int flags = 0) = 0;
    virtual cudaError_t _cudaMallocArray(struct cudaArray **array, const struct cudaChannelFormatDesc *desc, size_t width, size_t height __dv(0), unsigned int flags __dv(0)) = 0;
    virtual cudaError_t _cudaMallocHost(void **ptr, size_t size) = 0;
    virtual cudaError_t _cudaMallocMipmappedArray() = 0;
    virtual cudaError_t _cudaMallocPitch(void **devPtr, size_t *pitch, size_t width, size_t height) = 0;
    virtual cudaError_t _cudaMemcpy(void * dst, const void * src, size_t count, enum cudaMemcpyKind kind) = 0;    
    virtual cudaError_t _cudaMemcpy2D(void *dst, size_t dpitch, const void *src, size_t spitch, size_t width, size_t height, enum cudaMemcpyKind kind) = 0;
    virtual cudaError_t _cudaMemcpy2DArrayToArray(struct cudaArray *dst, size_t wOffsetDst, size_t hOffsetDst, const struct cudaArray *src, size_t wOffsetSrc, size_t hOffsetSrc, size_t width, size_t height, enum cudaMemcpyKind kind __dv(cudaMemcpyDeviceToDevice)) = 0;
    virtual cudaError_t _cudaMemcpy2DAsync(void *dst, size_t dpitch, const void *src, size_t spitch, size_t width, size_t height, enum cudaMemcpyKind kind, cudaStream_t stream __dv(0)) = 0;
    virtual cudaError_t _cudaMemcpy2DFromArray(void *dst, size_t dpitch, const struct cudaArray *src, size_t wOffset, size_t hOffset, size_t width, size_t height, enum cudaMemcpyKind kind) = 0;
    virtual cudaError_t _cudaMemcpy2DFromArrayAsync(void *dst, size_t dpitch, const struct cudaArray *src, size_t wOffset, size_t hOffset, size_t width, size_t height, enum cudaMemcpyKind kind, cudaStream_t stream __dv(0)) = 0;
    virtual cudaError_t _cudaMemcpy2DToArray(struct cudaArray *dst, size_t wOffset, size_t hOffset, const void *src, size_t spitch, size_t width, size_t height, enum cudaMemcpyKind kind) = 0;
    virtual cudaError_t _cudaMemcpy2DToArrayAsync(struct cudaArray *dst, size_t wOffset, size_t hOffset, const void *src, size_t spitch, size_t width, size_t height, enum cudaMemcpyKind kind, cudaStream_t stream __dv(0)) = 0;
    virtual cudaError_t _cudaMemcpy3D(const struct cudaMemcpy3DParms *p) = 0;
    virtual cudaError_t _cudaMemcpy3DAsync(const struct cudaMemcpy3DParms *p, cudaStream_t stream __dv(0)) = 0;
    virtual cudaError_t _cudaMemcpy3DPeer() = 0;
    virtual cudaError_t _cudaMemcpy3DPeerAsync() = 0;
    virtual cudaError_t _cudaMemcpyArrayToArray(struct cudaArray *dst, size_t wOffsetDst, size_t hOffsetDst, const struct cudaArray *src, size_t wOffsetSrc, size_t hOffsetSrc, size_t count, enum cudaMemcpyKind kind __dv(cudaMemcpyDeviceToDevice)) = 0;
    virtual cudaError_t _cudaMemcpyAsync(void *dst, const void *src, size_t count, enum cudaMemcpyKind kind, cudaStream_t stream __dv(0)) = 0;
    virtual cudaError_t _cudaMemcpyFromArray(void *dst, const struct cudaArray *src, size_t wOffset, size_t hOffset, size_t count, enum cudaMemcpyKind kind) = 0;
    virtual cudaError_t _cudaMemcpyFromArrayAsync(void *dst, const struct cudaArray *src, size_t wOffset, size_t hOffset, size_t count, enum cudaMemcpyKind kind, cudaStream_t stream __dv(0)) = 0;
    virtual cudaError_t _cudaMemcpyFromSymbol(void *dst, const char *symbol, size_t count, size_t offset __dv(0), enum cudaMemcpyKind kind __dv(cudaMemcpyDeviceToHost)) = 0;
    virtual cudaError_t _cudaMemcpyFromSymbolAsync(void *dst, const char *symbol, size_t count, size_t offset, enum cudaMemcpyKind kind, cudaStream_t stream __dv(0)) = 0;
    virtual cudaError_t _cudaMemcpyPeer() = 0;
    virtual cudaError_t _cudaMemcpyPeerAsync() = 0;
    virtual cudaError_t _cudaMemcpyToArray(struct cudaArray *dst, size_t wOffset, size_t hOffset, const void *src, size_t count, enum cudaMemcpyKind kind) = 0;
    virtual cudaError_t _cudaMemcpyToArrayAsync(struct cudaArray *dst, size_t wOffset, size_t hOffset, const void *src, size_t count, enum cudaMemcpyKind kind, cudaStream_t stream __dv(0)) = 0;
    virtual cudaError_t _cudaMemcpyToSymbol(const char *symbol, const void *src, size_t count, size_t offset __dv(0), enum cudaMemcpyKind kind __dv(cudaMemcpyHostToDevice)) = 0;
    virtual cudaError_t _cudaMemcpyToSymbolAsync(const char *symbol, const void *src, size_t count, size_t offset, enum cudaMemcpyKind kind, cudaStream_t stream __dv(0)) = 0;
    virtual cudaError_t _cudaMemGetInfo(size_t *free, size_t *total) = 0;
    virtual cudaError_t _cudaMemset(void * devPtr, int value, size_t count) = 0;          
	virtual cudaError_t _cudaMemsetAsync(void * devPtr, int value, size_t count, cudaStream_t stream __dv(0)) = 0;
    virtual cudaError_t _cudaMemset2D(void *devPtr, size_t pitch, int value, size_t width, size_t height) = 0;
    virtual cudaError_t _cudaMemset2DAsync(void *devPtr, size_t pitch, int value, size_t width, size_t height, cudaStream_t stream = 0) = 0;
    virtual cudaError_t _cudaMemset3D(struct cudaPitchedPtr pitchedDevPtr, int value, struct cudaExtent extent) = 0;
    virtual cudaError_t _cudaMemset3DAsync() = 0;
    virtual cudaError_t _cudaPeekAtLastError(void) = 0;
    virtual cudaError_t _cudaPointerGetAttributes() = 0;
    virtual cudaError_t _cudaProfilerStart() = 0;
    virtual cudaError_t _cudaProfilerStop() = 0;
    virtual cudaError_t _cudaRegisterDeviceFunction() = 0;
    virtual void** _cudaRegisterFatBinary(void *fatCubin) = 0;
    virtual void _cudaRegisterFunction(void **fatCubinHandle, const char *hostFun, char *deviceFun, const char *deviceName, int thread_limit, uint3 *tid, uint3 *bid, dim3 *bDim, dim3 *gDim, int *wSize) = 0;
    virtual cudaError_t _cudaRegisterPrelinkedFatBinary() = 0;
    virtual cudaError_t _cudaRegisterShared() = 0;
    virtual cudaError_t _cudaRegisterSharedVar() = 0;
    virtual void _cudaRegisterSurface(void **fatCubinHandle, const struct surfaceReference *hostVar, const void **deviceAddress, const char *deviceName, int dim, int ext) = 0;
    virtual void _cudaRegisterTexture(void **fatCubinHandle, const struct textureReference *hostVar, const void **deviceAddress, const char *deviceName, int dim, int norm, int ext) = 0;
    virtual void _cudaRegisterVar(void **fatCubinHandle, char *hostVar, char *deviceAddress, const char *deviceName, int ext, int size, int constant, int global) = 0;
    virtual cudaError_t _cudaRuntimeGetVersion(int *runtimeVersion) = 0;
    virtual cudaError_t _cudaSetDevice(int device) = 0;
    virtual cudaError_t _cudaSetDeviceFlags(unsigned int flags) = 0;
    virtual cudaError_t _cudaSetDoubleForDevice(double *d) = 0;
    virtual cudaError_t _cudaSetDoubleForHost(double *d) = 0;
    virtual cudaError_t _cudaSetupArgument(const void *arg, size_t size, size_t offset) = 0;
    virtual cudaError_t _cudaSetValidDevices(int *device_arr, int len) = 0;
    virtual cudaError_t _cudaStreamAddCallback() = 0;
    virtual cudaError_t _cudaStreamCreate(cudaStream_t *pStream) = 0;
    virtual cudaError_t _cudaStreamCreateWithFlags() = 0;
    virtual cudaError_t _cudaStreamCreateWithPriority() = 0;
    virtual cudaError_t _cudaStreamDestroy(cudaStream_t stream) = 0;
    virtual cudaError_t _cudaStreamGetFlags() = 0;
    virtual cudaError_t _cudaStreamGetPriority() = 0;
    virtual cudaError_t _cudaStreamQuery(cudaStream_t stream) = 0;
    virtual cudaError_t _cudaStreamSynchronize(cudaStream_t stream) = 0;
    virtual cudaError_t _cudaStreamWaitEvent() = 0;
    virtual cudaError_t _cudaThreadExit() = 0;
    virtual cudaError_t _cudaThreadGetCacheConfig() = 0;
    virtual cudaError_t _cudaThreadGetLimit(enum cudaLimit limit, size_t value) = 0;
    virtual cudaError_t _cudaThreadSetCacheConfig() = 0;
    virtual cudaError_t _cudaThreadSetLimit(enum cudaLimit limit, size_t value) = 0;
    virtual cudaError_t _cudaThreadSynchronize(void) = 0;
    virtual cudaError_t _cudaUnbindTexture(const struct textureReference *texref) = 0;
    virtual void _cudaUnregisterFatBinary(void **fatCubinHandle) = 0;
    virtual cudaError_t _cudaWGLGetDevice() = 0;
    virtual cudaError_t _NvOptimusEnablementCuda() = 0;

    // cuda.h equivalents.
    virtual CUresult _cuArray3DCreate(CUarray *pHandle, const CUDA_ARRAY3D_DESCRIPTOR *pAllocateArray) = 0;
    virtual CUresult _cuArray3DCreate_v2(CUarray *pHandle, const CUDA_ARRAY3D_DESCRIPTOR *pAllocateArray) = 0;
    virtual CUresult _cuArray3DGetDescriptor_v2( CUDA_ARRAY3D_DESCRIPTOR *pArrayDescriptor, CUarray hArray ) = 0;
    virtual CUresult _cuArray3DGetDescriptor( CUDA_ARRAY3D_DESCRIPTOR *pArrayDescriptor, CUarray hArray ) = 0;
    virtual CUresult _cuArrayCreate( CUarray *pHandle, const CUDA_ARRAY_DESCRIPTOR *pAllocateArray ) = 0;
    virtual CUresult _cuArrayCreate_v2( CUarray *pHandle, const CUDA_ARRAY_DESCRIPTOR *pAllocateArray ) = 0;
    virtual CUresult _cuArrayDestroy( CUarray hArray ) = 0;
    virtual CUresult _cuArrayGetDescriptor( CUDA_ARRAY_DESCRIPTOR *pArrayDescriptor, CUarray hArray ) = 0;
    virtual CUresult _cuArrayGetDescriptor_v2( CUDA_ARRAY_DESCRIPTOR *pArrayDescriptor, CUarray hArray ) = 0;
    virtual CUresult _cuCtxAttach(CUcontext *pctx, unsigned int flags) = 0;
    virtual CUresult _cuCtxCreate(CUcontext *pctx, unsigned int flags, CUdevice dev ) = 0;
    virtual CUresult _cuCtxCreate_v2(CUcontext *pctx, unsigned int flags, CUdevice dev ) = 0;
    virtual CUresult _cuCtxDestroy( CUcontext ctx ) = 0;
    virtual CUresult _cuCtxDetach(CUcontext ctx) = 0;
    virtual CUresult _cuCtxGetDevice(CUdevice *device) = 0;
    virtual CUresult _cuCtxGetLimit(size_t *pvalue, CUlimit limit) = 0;
    virtual CUresult _cuCtxPopCurrent( CUcontext *pctx ) = 0;
    virtual CUresult _cuCtxPushCurrent( CUcontext ctx ) = 0;
    virtual CUresult _cuCtxSetLimit(CUlimit limit, size_t value) = 0;
    virtual CUresult _cuCtxSynchronize(void) = 0;
    virtual CUresult _cuDeviceComputeCapability(int *major, int *minor, CUdevice dev) = 0;
    virtual CUresult _cuDeviceGet(CUdevice *device, int ordinal) = 0;
    virtual CUresult _cuDeviceGetAttribute(int *pi, CUdevice_attribute attrib, CUdevice dev) = 0;
    virtual CUresult _cuDeviceGetCount(int *count) = 0;
    virtual CUresult _cuDeviceGetName(char *name, int len, CUdevice dev) = 0;
    virtual CUresult _cuDeviceGetProperties(CUdevprop *prop, CUdevice dev) = 0;
    virtual CUresult _cuDeviceTotalMem(unsigned int *bytes, CUdevice dev) = 0;
    virtual CUresult _cuDeviceTotalMem_v2(unsigned int *bytes, CUdevice dev) = 0;
    virtual CUresult _cuDriverGetVersion(int *driverVersion) = 0;
    virtual CUresult _cuEventCreate( CUevent *phEvent, unsigned int Flags ) = 0;
    virtual CUresult _cuEventDestroy( CUevent hEvent ) = 0;
    virtual CUresult _cuEventElapsedTime( float *pMilliseconds, CUevent hStart, CUevent hEnd ) = 0;
    virtual CUresult _cuEventQuery( CUevent hEvent ) = 0;
    virtual CUresult _cuEventRecord( CUevent hEvent, CUstream hStream ) = 0;
    virtual CUresult _cuEventSynchronize( CUevent hEvent ) = 0;
    virtual CUresult _cuFuncGetAttribute (int *pi, CUfunction_attribute attrib, CUfunction hfunc) = 0;
    virtual CUresult _cuFuncSetBlockShape (CUfunction hfunc, int x, int y, int z) = 0;
    virtual CUresult _cuFuncSetCacheConfig(CUfunction hfunc, CUfunc_cache config) = 0;
    virtual CUresult _cuFuncSetSharedSize (CUfunction hfunc, unsigned int bytes) = 0;
    virtual CUresult _cuGetExportTable( const void **ppExportTable, const CUuuid *pExportTableId ) = 0;
    virtual CUresult _cuGraphicsMapResources( unsigned int count, CUgraphicsResource *resources, CUstream hStream ) = 0;
    virtual CUresult _cuGraphicsResourceGetMappedPointer( CUdeviceptr *pDevPtr, unsigned int *pSize, CUgraphicsResource resource ) = 0;
    virtual CUresult _cuGraphicsResourceGetMappedPointer_v2( CUdeviceptr *pDevPtr, unsigned int *pSize, CUgraphicsResource resource ) = 0;
    virtual CUresult _cuGraphicsResourceSetMapFlags( CUgraphicsResource resource, unsigned int flags ) = 0;
    virtual CUresult _cuGraphicsSubResourceGetMappedArray( CUarray *pArray, CUgraphicsResource resource, unsigned int arrayIndex, unsigned int mipLevel ) = 0;
    virtual CUresult _cuGraphicsUnmapResources( unsigned int count, CUgraphicsResource *resources, CUstream hStream ) = 0;
    virtual CUresult _cuGraphicsUnregisterResource(CUgraphicsResource resource) = 0;
    virtual CUresult _cuInit(unsigned int Flags) = 0;
    virtual CUresult _cuLaunch ( CUfunction f ) = 0;
    virtual CUresult _cuLaunchGrid (CUfunction f, int grid_width, int grid_height) = 0;
    virtual CUresult _cuLaunchGridAsync( CUfunction f, int grid_width, int grid_height, CUstream hStream ) = 0;
    virtual CUresult _cuMemAlloc( CUdeviceptr *dptr, unsigned int bytesize) = 0;
    virtual CUresult _cuMemAlloc_v2( CUdeviceptr *dptr, unsigned int bytesize) = 0;
    virtual CUresult _cuMemAllocHost(void **pp, unsigned int bytesize) = 0;
    virtual CUresult _cuMemAllocHost_v2(void **pp, unsigned int bytesize) = 0;
    virtual CUresult _cuMemAllocPitch( CUdeviceptr *dptr, unsigned int *pPitch, unsigned int WidthInBytes, unsigned int Height, unsigned int ElementSizeBytes) = 0;
    virtual CUresult _cuMemAllocPitch_v2( CUdeviceptr *dptr, unsigned int *pPitch, unsigned int WidthInBytes, unsigned int Height, unsigned int ElementSizeBytes) = 0;
    virtual CUresult _cuMemcpy2D( const CUDA_MEMCPY2D *pCopy ) = 0;
    virtual CUresult _cuMemcpy2D_v2( const CUDA_MEMCPY2D *pCopy ) = 0;
    virtual CUresult _cuMemcpy2DAsync( const CUDA_MEMCPY2D *pCopy, CUstream hStream ) = 0;
    virtual CUresult _cuMemcpy2DAsync_v2( const CUDA_MEMCPY2D *pCopy, CUstream hStream ) = 0;
    virtual CUresult _cuMemcpy2DUnaligned( const CUDA_MEMCPY2D *pCopy ) = 0;
    virtual CUresult _cuMemcpy2DUnaligned_v2( const CUDA_MEMCPY2D *pCopy ) = 0;
    virtual CUresult _cuMemcpy3D( const CUDA_MEMCPY3D *pCopy ) = 0;
    virtual CUresult _cuMemcpy3D_v2( const CUDA_MEMCPY3D *pCopy ) = 0;
    virtual CUresult _cuMemcpy3DAsync( const CUDA_MEMCPY3D *pCopy, CUstream hStream ) = 0;
    virtual CUresult _cuMemcpy3DAsync_v2( const CUDA_MEMCPY3D *pCopy, CUstream hStream ) = 0;
    virtual CUresult _cuMemcpyAtoA( CUarray dstArray, unsigned int dstOffset, CUarray srcArray, unsigned int srcOffset, unsigned int ByteCount ) = 0;
    virtual CUresult _cuMemcpyAtoA_v2( CUarray dstArray, unsigned int dstOffset, CUarray srcArray, unsigned int srcOffset, unsigned int ByteCount ) = 0;
    virtual CUresult _cuMemcpyAtoD ( CUdeviceptr dstDevice, CUarray srcArray, unsigned int srcOffset, unsigned int ByteCount ) = 0;
    virtual CUresult _cuMemcpyAtoD_v2 ( CUdeviceptr dstDevice, CUarray srcArray, unsigned int srcOffset, unsigned int ByteCount ) = 0;
    virtual CUresult _cuMemcpyAtoH( void *dstHost, CUarray srcArray, unsigned int srcOffset, unsigned int ByteCount ) = 0;
    virtual CUresult _cuMemcpyAtoH_v2( void *dstHost, CUarray srcArray, unsigned int srcOffset, unsigned int ByteCount ) = 0;
    virtual CUresult _cuMemcpyAtoHAsync( void *dstHost, CUarray srcArray, unsigned int srcOffset, unsigned int ByteCount, CUstream hStream ) = 0;
    virtual CUresult _cuMemcpyAtoHAsync_v2( void *dstHost, CUarray srcArray, unsigned int srcOffset, unsigned int ByteCount, CUstream hStream ) = 0;
    virtual CUresult _cuMemcpyDtoA ( CUarray dstArray, unsigned int dstOffset, CUdeviceptr srcDevice, unsigned int ByteCount ) = 0;
    virtual CUresult _cuMemcpyDtoA_v2 ( CUarray dstArray, unsigned int dstOffset, CUdeviceptr srcDevice, unsigned int ByteCount ) = 0;
    virtual CUresult _cuMemcpyDtoD (CUdeviceptr dstDevice, CUdeviceptr srcDevice, unsigned int ByteCount ) = 0;
    virtual CUresult _cuMemcpyDtoD_v2 (CUdeviceptr dstDevice, CUdeviceptr srcDevice, unsigned int ByteCount ) = 0;
    virtual CUresult _cuMemcpyDtoDAsync (CUdeviceptr dstDevice, CUdeviceptr srcDevice, unsigned int ByteCount, CUstream hStream ) = 0;
    virtual CUresult _cuMemcpyDtoDAsync_v2 (CUdeviceptr dstDevice, CUdeviceptr srcDevice, unsigned int ByteCount, CUstream hStream ) = 0;
    virtual CUresult _cuMemcpyDtoH (void *dstHost, CUdeviceptr srcDevice, unsigned int ByteCount ) = 0;
    virtual CUresult _cuMemcpyDtoH_v2 (void *dstHost, CUdeviceptr srcDevice, unsigned int ByteCount ) = 0;
    virtual CUresult _cuMemcpyDtoHAsync (void *dstHost, CUdeviceptr srcDevice, unsigned int ByteCount, CUstream hStream ) = 0;
    virtual CUresult _cuMemcpyDtoHAsync_v2 (void *dstHost, CUdeviceptr srcDevice, unsigned int ByteCount, CUstream hStream ) = 0;
    virtual CUresult _cuMemcpyHtoA( CUarray dstArray, unsigned int dstOffset, const void *srcHost, unsigned int ByteCount ) = 0;
    virtual CUresult _cuMemcpyHtoA_v2( CUarray dstArray, unsigned int dstOffset, const void *srcHost, unsigned int ByteCount ) = 0;
    virtual CUresult _cuMemcpyHtoAAsync( CUarray dstArray, unsigned int dstOffset, const void *srcHost, unsigned int ByteCount, CUstream hStream ) = 0;
    virtual CUresult _cuMemcpyHtoAAsync_v2( CUarray dstArray, unsigned int dstOffset, const void *srcHost, unsigned int ByteCount, CUstream hStream ) = 0;
    virtual CUresult _cuMemcpyHtoD (CUdeviceptr dstDevice, const void *srcHost, unsigned int ByteCount ) = 0;
    virtual CUresult _cuMemcpyHtoD_v2 (CUdeviceptr dstDevice, const void *srcHost, unsigned int ByteCount ) = 0;
    virtual CUresult _cuMemcpyHtoDAsync (CUdeviceptr dstDevice, const void *srcHost, unsigned int ByteCount, CUstream hStream ) = 0;
    virtual CUresult _cuMemcpyHtoDAsync_v2 (CUdeviceptr dstDevice, const void *srcHost, unsigned int ByteCount, CUstream hStream ) = 0;
    virtual CUresult _cuMemFree(CUdeviceptr dptr) = 0;
    virtual CUresult _cuMemFree_v2(CUdeviceptr dptr) = 0;
    virtual CUresult _cuMemFreeHost(void *p) = 0;
    virtual CUresult _cuMemGetAddressRange( CUdeviceptr *pbase, unsigned int *psize, CUdeviceptr dptr ) = 0;
    virtual CUresult _cuMemGetAddressRange_v2( CUdeviceptr *pbase, unsigned int *psize, CUdeviceptr dptr ) = 0;
    virtual CUresult _cuMemGetInfo(unsigned int *free, unsigned int *total) = 0;
    virtual CUresult _cuMemGetInfo_v2(unsigned int *free, unsigned int *total) = 0;
    virtual CUresult _cuMemHostAlloc(void **pp, size_t bytesize, unsigned int Flags ) = 0;
    virtual CUresult _cuMemHostGetDevicePointer( CUdeviceptr *pdptr, void *p, unsigned int Flags ) = 0;
    virtual CUresult _cuMemHostGetDevicePointer_v2( CUdeviceptr *pdptr, void *p, unsigned int Flags ) = 0;
    virtual CUresult _cuMemHostGetFlags( unsigned int *pFlags, void *p ) = 0;
    virtual CUresult _cuMemsetD16( CUdeviceptr dstDevice, unsigned short us, unsigned int N ) = 0;
    virtual CUresult _cuMemsetD16_v2( CUdeviceptr dstDevice, unsigned short us, unsigned int N ) = 0;
    virtual CUresult _cuMemsetD2D16( CUdeviceptr dstDevice, unsigned int dstPitch, unsigned short us, unsigned int Width, unsigned int Height ) = 0;
    virtual CUresult _cuMemsetD2D16_v2( CUdeviceptr dstDevice, unsigned int dstPitch, unsigned short us, unsigned int Width, unsigned int Height ) = 0;
    virtual CUresult _cuMemsetD2D32( CUdeviceptr dstDevice, unsigned int dstPitch, unsigned int ui, unsigned int Width, unsigned int Height ) = 0;
    virtual CUresult _cuMemsetD2D32_v2( CUdeviceptr dstDevice, unsigned int dstPitch, unsigned int ui, unsigned int Width, unsigned int Height ) = 0;
    virtual CUresult _cuMemsetD2D8( CUdeviceptr dstDevice, unsigned int dstPitch, unsigned char uc, unsigned int Width, unsigned int Height ) = 0;
    virtual CUresult _cuMemsetD2D8_v2( CUdeviceptr dstDevice, unsigned int dstPitch, unsigned char uc, unsigned int Width, unsigned int Height ) = 0;
    virtual CUresult _cuMemsetD32( CUdeviceptr dstDevice, unsigned int ui, unsigned int N ) = 0;
    virtual CUresult _cuMemsetD32_v2( CUdeviceptr dstDevice, unsigned int ui, unsigned int N ) = 0;
    virtual CUresult _cuMemsetD8( CUdeviceptr dstDevice, unsigned char uc, unsigned int N ) = 0;
    virtual CUresult _cuMemsetD8_v2( CUdeviceptr dstDevice, unsigned char uc, unsigned int N ) = 0;
    virtual CUresult _cuModuleGetFunction(CUfunction *hfunc, CUmodule hmod, const char *name) = 0;
    virtual CUresult _cuModuleGetGlobal(CUdeviceptr *dptr, unsigned int *bytes, CUmodule hmod, const char *name) = 0;
    virtual CUresult _cuModuleGetGlobal_v2(CUdeviceptr *dptr, unsigned int *bytes, CUmodule hmod, const char *name) = 0;
    virtual CUresult _cuModuleGetSurfRef(CUsurfref *pSurfRef, CUmodule hmod, const char *name) = 0;
    virtual CUresult _cuModuleGetTexRef(CUtexref *pTexRef, CUmodule hmod, const char *name) = 0;
    virtual CUresult _cuModuleLoad(CUmodule *module, const char *fname) = 0;
    virtual CUresult _cuModuleLoadData(CUmodule *module, const void *image) = 0;
    virtual CUresult _cuModuleLoadDataEx(CUmodule *module, const void *image, unsigned int numOptions, CUjit_option *options, void **optionValues) = 0;
    virtual CUresult _cuModuleLoadFatBinary(CUmodule *module, const void *fatCubin) = 0;
    virtual CUresult _cuModuleUnload(CUmodule hmod) = 0;
    virtual CUresult _cuParamSetf    (CUfunction hfunc, int offset, float value) = 0;
    virtual CUresult _cuParamSeti    (CUfunction hfunc, int offset, unsigned int value) = 0;
    virtual CUresult _cuParamSetSize (CUfunction hfunc, unsigned int numbytes) = 0;
    virtual CUresult _cuParamSetTexRef(CUfunction hfunc, int texunit, CUtexref hTexRef) = 0;
    virtual CUresult _cuParamSetv    (CUfunction hfunc, int offset, void *ptr, unsigned int numbytes) = 0;
    virtual CUresult _cuStreamCreate( CUstream *phStream, unsigned int Flags ) = 0;
    virtual CUresult _cuStreamDestroy( CUstream hStream ) = 0;
    virtual CUresult _cuStreamQuery( CUstream hStream ) = 0;
    virtual CUresult _cuStreamSynchronize( CUstream hStream ) = 0;
    virtual CUresult _cuSurfRefGetArray( CUarray *phArray, CUsurfref hSurfRef ) = 0;
    virtual CUresult _cuSurfRefSetArray( CUsurfref hSurfRef, CUarray hArray, unsigned int Flags ) = 0;
    virtual CUresult _cuTexRefCreate( CUtexref *pTexRef ) = 0;
    virtual CUresult _cuTexRefDestroy( CUtexref hTexRef ) = 0;
    virtual CUresult _cuTexRefGetAddress( CUdeviceptr *pdptr, CUtexref hTexRef ) = 0;
    virtual CUresult _cuTexRefGetAddress_v2( CUdeviceptr *pdptr, CUtexref hTexRef ) = 0;
    virtual CUresult _cuTexRefGetAddressMode( CUaddress_mode *pam, CUtexref hTexRef, int dim ) = 0;
    virtual CUresult _cuTexRefGetArray( CUarray *phArray, CUtexref hTexRef ) = 0;
    virtual CUresult _cuTexRefGetFilterMode( CUfilter_mode *pfm, CUtexref hTexRef ) = 0;
    virtual CUresult _cuTexRefGetFlags( unsigned int *pFlags, CUtexref hTexRef ) = 0;
    virtual CUresult _cuTexRefGetFormat( CUarray_format *pFormat, int *pNumChannels, CUtexref hTexRef ) = 0;
    virtual CUresult _cuTexRefSetAddress( unsigned int *ByteOffset, CUtexref hTexRef, CUdeviceptr dptr, unsigned int bytes ) = 0;
    virtual CUresult _cuTexRefSetAddress_v2( unsigned int *ByteOffset, CUtexref hTexRef, CUdeviceptr dptr, unsigned int bytes ) = 0;
    virtual CUresult _cuTexRefSetAddress2D( CUtexref hTexRef, const CUDA_ARRAY_DESCRIPTOR *desc, CUdeviceptr dptr, unsigned int Pitch) = 0;
    virtual CUresult _cuTexRefSetAddress2D_v2( CUtexref hTexRef, const CUDA_ARRAY_DESCRIPTOR *desc, CUdeviceptr dptr, unsigned int Pitch) = 0;
    virtual CUresult _cuTexRefSetAddressMode( CUtexref hTexRef, int dim, CUaddress_mode am ) = 0;
    virtual CUresult _cuTexRefSetArray( CUtexref hTexRef, CUarray hArray, unsigned int Flags ) = 0;
    virtual CUresult _cuTexRefSetFilterMode( CUtexref hTexRef, CUfilter_mode fm ) = 0;
    virtual CUresult _cuTexRefSetFlags( CUtexref hTexRef, unsigned int Flags ) = 0;
    virtual CUresult _cuTexRefSetFormat( CUtexref hTexRef, CUarray_format fmt, int ) = 0;

    virtual void ExitHandler() = 0;
};
